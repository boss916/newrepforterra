{
  "version": 4,
  "terraform_version": "1.0.3",
  "serial": 1255,
  "lineage": "ef42b3a5-60fd-566f-c9c3-89c137abb4dd",
  "outputs": {},
  "resources": [
    {
      "module": "module.composer_module",
      "mode": "managed",
      "type": "google_composer_environment",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/hashicorp/google-beta\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "config": [
              {
                "airflow_uri": "https://v462a3be7e78adf20p-tp.appspot.com",
                "dag_gcs_prefix": "gs://asia-south1-example-compose-f3f5a2e3-bucket/dags",
                "database_config": [
                  {
                    "machine_type": "db-n1-standard-2"
                  }
                ],
                "encryption_config": [
                  {
                    "kms_key_name": ""
                  }
                ],
                "environment_size": "",
                "gke_cluster": "projects/idea-ind-data-ai-dev/zones/asia-south1-c/clusters/asia-south1-example-compose-f3f5a2e3-gke",
                "maintenance_window": [
                  {
                    "end_time": "1970-01-01T04:00:00Z",
                    "recurrence": "FREQ=WEEKLY;BYDAY=FR,SA,SU",
                    "start_time": "1970-01-01T00:00:00Z"
                  }
                ],
                "master_authorized_networks_config": [
                  {
                    "cidr_blocks": [],
                    "enabled": true
                  }
                ],
                "node_config": [
                  {
                    "disk_size_gb": 100,
                    "enable_ip_masq_agent": false,
                    "ip_allocation_policy": [
                      {
                        "cluster_ipv4_cidr_block": "10.0.112.0/21",
                        "cluster_secondary_range_name": "",
                        "services_ipv4_cidr_block": "10.0.120.0/24",
                        "services_secondary_range_name": "",
                        "use_ip_aliases": true
                      }
                    ],
                    "machine_type": "projects/idea-ind-data-ai-dev/zones/asia-south1-c/machineTypes/n1-standard-2",
                    "max_pods_per_node": 32,
                    "network": "projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "service_account": "serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
                    "subnetwork": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-composer1-uscentral1-idea-dev-tf",
                    "tags": [
                      "ssh-cluster-tag-tf"
                    ],
                    "zone": "projects/idea-ind-data-ai-dev/zones/asia-south1-c"
                  }
                ],
                "node_count": 3,
                "private_environment_config": [
                  {
                    "cloud_composer_connection_subnetwork": "",
                    "cloud_composer_network_ipv4_cidr_block": "",
                    "cloud_sql_ipv4_cidr_block": "10.0.123.0/24",
                    "enable_private_endpoint": true,
                    "enable_privately_used_public_ips": false,
                    "master_ipv4_cidr_block": "10.0.121.0/24",
                    "web_server_ipv4_cidr_block": "10.0.122.0/24"
                  }
                ],
                "software_config": [
                  {
                    "airflow_config_overrides": null,
                    "env_variables": null,
                    "image_version": "composer-1.17.9-airflow-2.1.4",
                    "pypi_packages": null,
                    "python_version": "3",
                    "scheduler_count": 2
                  }
                ],
                "web_server_config": [
                  {
                    "machine_type": "composer-n1-webserver-2"
                  }
                ],
                "web_server_network_access_control": [
                  {
                    "allowed_ip_range": [
                      {
                        "description": "Allows access from all IPv4 addresses (default value)",
                        "value": "0.0.0.0/0"
                      },
                      {
                        "description": "Allows access from all IPv6 addresses (default value)",
                        "value": "::0/0"
                      }
                    ]
                  }
                ],
                "workloads_config": [
                  {
                    "scheduler": [
                      {
                        "count": null,
                        "cpu": null,
                        "memory_gb": null,
                        "storage_gb": null
                      }
                    ],
                    "web_server": [
                      {
                        "cpu": null,
                        "memory_gb": null,
                        "storage_gb": null
                      }
                    ],
                    "worker": [
                      {
                        "cpu": null,
                        "max_count": null,
                        "memory_gb": null,
                        "min_count": null,
                        "storage_gb": null
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "projects/idea-ind-data-ai-dev/locations/asia-south1/environments/example-composer-env-tf",
            "labels": null,
            "name": "example-composer-env-tf",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo3MjAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6NzIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.composer_module.google_service_account.test",
            "module.main_vpc.google_compute_network.vpc_network",
            "module.main_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.composer_module",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "rules",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22",
                  "443",
                  "9092",
                  "9021",
                  "8083"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-02-24T21:39:52.824-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/idea-ind-data-ai-dev/global/firewalls/dataproctfroletftftgtftf",
            "log_config": [],
            "name": "dataproctfroletftftgtftf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "priority": 1002,
            "project": "idea-ind-data-ai-dev",
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/firewalls/dataproctfroletftftgtftf",
            "source_ranges": [
              "10.0.0.0/24"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "ssh-cluster-tag-tf"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "module": "module.composer_module",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "composer-worker",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SAQyAI=",
            "id": "idea-ind-data-ai-dev/roles/composer.worker/serviceaccount:serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "roles/composer.worker"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.composer_module.google_service_account.test"
          ]
        }
      ]
    },
    {
      "module": "module.composer_module",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "composer-worker2",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SAQyAI=",
            "id": "idea-ind-data-ai-dev/roles/composer.admin/serviceaccount:serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "roles/composer.admin"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.composer_module.google_service_account.test"
          ]
        }
      ]
    },
    {
      "module": "module.composer_module",
      "mode": "managed",
      "type": "google_service_account",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "serviceidcompser",
            "description": "",
            "display_name": "Test Service Account for Composer Environment",
            "email": "serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/serviceidcompser@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "117884930032674022997"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.compute_instance_linux_module",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "rulehs",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-02-24T21:39:37.776-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/idea-ind-data-ai-dev/global/firewalls/vmtftf",
            "log_config": [],
            "name": "vmtftf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf1",
            "priority": 1000,
            "project": "idea-ind-data-ai-dev",
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/firewalls/vmtftf",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "linuxtf"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.compute_instance_linux_module",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "myvmone",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20220213",
                    "labels": {},
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/zones/asia-south1-c/disks/myvmonewoneon"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/idea-ind-data-ai-dev/zones/asia-south1-c/instances/myvmonewoneon",
            "instance_id": "2042872799184672080",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": {
              "sshKeys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgTX/HvGN6g+4YtqP8MyPkKqZoMYB0BtvMw+qt+poxlnXa7s9gf3Gs2sX337EAhKFGJt8I4FI7wzqMJ2Yf62N/Wt8DoBrN5qaRPNjCLAfpDu+1XTWtgPGQEi5DW1o28Yva21ev0VwSvQ73LWJ/QGo62UrFAhKRlCO4BhWb6mz1SvytSrXGbczLmjpTAdy89Rdaxspkzw+OcBrC6Gnlrna1rbigmYy0O8ENDK5gvg0r5VHx+JMPOrKqa4COLrOWg+LF1J53YHpNhZSyNwsNflz88qMQP27MFcIf1gTNM96wt+j5TYdgnCsTTCb1LHWORlOULN07z0jfHSpNdrsOH+N/ ec2-user@ip-172-31-109-247.ec2.internal\n"
            },
            "metadata_fingerprint": "uufaWA4WbX8=",
            "metadata_startup_script": "",
            "min_cpu_platform": "",
            "name": "myvmonewoneon",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.100.238.53",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
                "network_ip": "10.0.0.2",
                "nic_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-jumpbox-idea-dev-tf",
                "subnetwork_project": "idea-ind-data-ai-dev"
              }
            ],
            "project": "idea-ind-data-ai-dev",
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/zones/asia-south1-c/instances/myvmonewoneon",
            "service_account": [
              {
                "email": "vmserviceaccount-tf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "linuxtf"
            ],
            "tags_fingerprint": "ZxBAlx1Ea4k=",
            "timeouts": null,
            "zone": "asia-south1-c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "module.compute_instance_linux_module.google_service_account.vm",
            "module.main_vpc.google_compute_network.vpc_network",
            "module.main_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.compute_instance_linux_module",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "myvmtwo",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20220213",
                    "labels": {},
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/zones/asia-south1-c/disks/myvmtwotf"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/idea-ind-data-ai-dev/zones/asia-south1-c/instances/myvmtwotf",
            "instance_id": "4980496327884789072",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": {
              "sshKeys": "ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgTX/HvGN6g+4YtqP8MyPkKqZoMYB0BtvMw+qt+poxlnXa7s9gf3Gs2sX337EAhKFGJt8I4FI7wzqMJ2Yf62N/Wt8DoBrN5qaRPNjCLAfpDu+1XTWtgPGQEi5DW1o28Yva21ev0VwSvQ73LWJ/QGo62UrFAhKRlCO4BhWb6mz1SvytSrXGbczLmjpTAdy89Rdaxspkzw+OcBrC6Gnlrna1rbigmYy0O8ENDK5gvg0r5VHx+JMPOrKqa4COLrOWg+LF1J53YHpNhZSyNwsNflz88qMQP27MFcIf1gTNM96wt+j5TYdgnCsTTCb1LHWORlOULN07z0jfHSpNdrsOH+N/ ec2-user@ip-172-31-109-247.ec2.internal\n"
            },
            "metadata_fingerprint": "uufaWA4WbX8=",
            "metadata_startup_script": "",
            "min_cpu_platform": "",
            "name": "myvmtwotf",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.100.244.45",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
                "network_ip": "10.0.0.3",
                "nic_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-jumpbox-idea-dev-tf",
                "subnetwork_project": "idea-ind-data-ai-dev"
              }
            ],
            "project": "idea-ind-data-ai-dev",
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/zones/asia-south1-c/instances/myvmtwotf",
            "service_account": [
              {
                "email": "vmserviceaccount-tf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "linuxtf"
            ],
            "tags_fingerprint": "ZxBAlx1Ea4k=",
            "timeouts": null,
            "zone": "asia-south1-c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "module.compute_instance_linux_module.google_service_account.vm",
            "module.main_vpc.google_compute_network.vpc_network",
            "module.main_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.compute_instance_linux_module",
      "mode": "managed",
      "type": "google_service_account",
      "name": "vm",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "vmserviceaccount-tf",
            "description": "",
            "display_name": "vm-serviceaccount-tf",
            "email": "vmserviceaccount-tf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/vmserviceaccount-tf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/vmserviceaccount-tf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "108891007260212572602"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.datafusion",
      "mode": "data",
      "type": "google_service_account",
      "name": "myaccount",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "dataprocserviceaccountnewtf1",
            "display_name": "dataproc-tfnewtf",
            "email": "dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "unique_id": "109458519760222431973"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.datafusion",
      "mode": "managed",
      "type": "google_data_fusion_instance",
      "name": "extended_instance",
      "provider": "module.datafusion.provider[\"registry.terraform.io/hashicorp/google-beta\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_time": "2022-02-25T05:40:06.031067532Z",
            "dataproc_service_account": "dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "description": "My Data Fusion instance",
            "enable_stackdriver_logging": false,
            "enable_stackdriver_monitoring": false,
            "id": "projects/idea-ind-data-ai-dev/locations/asia-south1/instances/myinstance",
            "labels": {
              "example_key": "dev"
            },
            "name": "myinstance",
            "network_config": [
              {
                "ip_allocation": "10.89.48.0/22",
                "network": "vpc-idea-dev-tf"
              }
            ],
            "options": null,
            "private_instance": true,
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "service_account": "cloud-datafusion-management-sa@c7fb405d6b264c347-tp.iam.gserviceaccount.com",
            "service_endpoint": "https://myinstance-idea-ind-data-ai-dev-dot-as1.datafusion.googleusercontent.com",
            "state": "RUNNING",
            "state_message": "",
            "timeouts": null,
            "type": "BASIC",
            "update_time": "2022-02-25T05:56:15.198965756Z",
            "version": "6.5.1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjMwMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTUwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.datafusion.data.google_service_account.myaccount",
            "module.dataproc_module1.google_service_account.sa-name",
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "rule",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "1-65535"
                ],
                "protocol": "tcp"
              },
              {
                "ports": [
                  "1-65535"
                ],
                "protocol": "udp"
              },
              {
                "ports": [],
                "protocol": "icmp"
              }
            ],
            "creation_timestamp": "2022-02-24T21:39:53.009-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/idea-ind-data-ai-dev/global/firewalls/fwrule11",
            "log_config": [],
            "name": "fwrule11",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "priority": 1002,
            "project": "idea-ind-data-ai-dev",
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/firewalls/fwrule11",
            "source_ranges": [
              "10.0.0.0/24"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "ssh-dataproc-tf-tag"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "ruless",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "1-65535"
                ],
                "protocol": "tcp"
              },
              {
                "ports": [
                  "1-65535"
                ],
                "protocol": "udp"
              },
              {
                "ports": [],
                "protocol": "icmp"
              }
            ],
            "creation_timestamp": "2022-02-24T21:40:03.607-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/idea-ind-data-ai-dev/global/firewalls/fwrule22",
            "log_config": [],
            "name": "fwrule22",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "priority": 1002,
            "project": "idea-ind-data-ai-dev",
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/firewalls/fwrule22",
            "source_ranges": [
              "10.0.66.0/24"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_dataproc_cluster",
      "name": "mycluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/google-beta\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_config": [
              {
                "autoscaling_config": [],
                "bucket": "stagifng-dataproc5tfff",
                "encryption_config": [],
                "endpoint_config": [
                  {
                    "enable_http_port_access": true,
                    "http_ports": {
                      "HDFS NameNode": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/hdfs/dfshealth.html",
                      "Jupyter": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/jupyter/",
                      "JupyterLab": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/jupyter/lab/",
                      "MapReduce Job History": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/jobhistory/",
                      "Spark History Server": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/sparkhistory/",
                      "Tez": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/apphistory/tez-ui/",
                      "YARN Application Timeline": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/apphistory/",
                      "YARN ResourceManager": "https://6kodpst6pzgu7j22nobdpv7ur4-dot-asia-south1.dataproc.googleusercontent.com/yarn/"
                    }
                  }
                ],
                "gce_cluster_config": [
                  {
                    "internal_ip_only": true,
                    "metadata": null,
                    "network": "",
                    "service_account": "dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
                    "service_account_scopes": [
                      "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "shielded_instance_config": [],
                    "subnetwork": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-dataproc-idea-dev-tf",
                    "tags": [
                      "ssh-dataproc-tf-tag"
                    ],
                    "zone": "asia-south1-c"
                  }
                ],
                "initialization_action": [],
                "lifecycle_config": [],
                "master_config": [
                  {
                    "accelerators": [],
                    "disk_config": [
                      {
                        "boot_disk_size_gb": 1024,
                        "boot_disk_type": "pd-ssd",
                        "num_local_ssds": 0
                      }
                    ],
                    "image_uri": "https://www.googleapis.com/compute/v1/projects/cloud-dataproc/global/images/dataproc-1-5-ubu18-20211021-060200-rc06",
                    "instance_names": [
                      "mycluster-tf-new-m"
                    ],
                    "machine_type": "n1-standard-8",
                    "min_cpu_platform": "AUTOMATIC",
                    "num_instances": 1
                  }
                ],
                "metastore_config": [],
                "preemptible_worker_config": [
                  {
                    "disk_config": [
                      {
                        "boot_disk_size_gb": null,
                        "boot_disk_type": null,
                        "num_local_ssds": null
                      }
                    ],
                    "instance_names": [],
                    "num_instances": 0
                  }
                ],
                "security_config": [],
                "software_config": [
                  {
                    "image_version": "1.5.53-ubuntu18",
                    "optional_components": [
                      "ANACONDA",
                      "DOCKER",
                      "HIVE_WEBHCAT",
                      "JUPYTER",
                      "ZOOKEEPER"
                    ],
                    "override_properties": null,
                    "properties": {
                      "capacity-scheduler:yarn.scheduler.capacity.root.default.ordering-policy": "fair",
                      "core:fs.gs.block.size": "134217728",
                      "core:fs.gs.metadata.cache.enable": "false",
                      "core:hadoop.ssl.enabled.protocols": "TLSv1,TLSv1.1,TLSv1.2",
                      "distcp:mapreduce.map.java.opts": "-Xmx768m",
                      "distcp:mapreduce.map.memory.mb": "1024",
                      "distcp:mapreduce.reduce.java.opts": "-Xmx768m",
                      "distcp:mapreduce.reduce.memory.mb": "1024",
                      "hdfs:dfs.datanode.address": "0.0.0.0:9866",
                      "hdfs:dfs.datanode.http.address": "0.0.0.0:9864",
                      "hdfs:dfs.datanode.https.address": "0.0.0.0:9865",
                      "hdfs:dfs.datanode.ipc.address": "0.0.0.0:9867",
                      "hdfs:dfs.namenode.handler.count": "20",
                      "hdfs:dfs.namenode.http-address": "0.0.0.0:9870",
                      "hdfs:dfs.namenode.https-address": "0.0.0.0:9871",
                      "hdfs:dfs.namenode.lifeline.rpc-address": "mycluster-tf-new-m:8050",
                      "hdfs:dfs.namenode.secondary.http-address": "0.0.0.0:9868",
                      "hdfs:dfs.namenode.secondary.https-address": "0.0.0.0:9869",
                      "hdfs:dfs.namenode.service.handler.count": "10",
                      "hdfs:dfs.namenode.servicerpc-address": "mycluster-tf-new-m:8051",
                      "hive:hive.fetch.task.conversion": "none",
                      "mapred-env:HADOOP_JOB_HISTORYSERVER_HEAPSIZE": "4000",
                      "mapred:mapreduce.job.maps": "45",
                      "mapred:mapreduce.job.reduce.slowstart.completedmaps": "0.95",
                      "mapred:mapreduce.job.reduces": "15",
                      "mapred:mapreduce.jobhistory.recovery.store.class": "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
                      "mapred:mapreduce.map.cpu.vcores": "1",
                      "mapred:mapreduce.map.java.opts": "-Xmx2457m",
                      "mapred:mapreduce.map.memory.mb": "3072",
                      "mapred:mapreduce.reduce.cpu.vcores": "1",
                      "mapred:mapreduce.reduce.java.opts": "-Xmx2457m",
                      "mapred:mapreduce.reduce.memory.mb": "3072",
                      "mapred:mapreduce.task.io.sort.mb": "256",
                      "mapred:yarn.app.mapreduce.am.command-opts": "-Xmx2457m",
                      "mapred:yarn.app.mapreduce.am.resource.cpu-vcores": "1",
                      "mapred:yarn.app.mapreduce.am.resource.mb": "3072",
                      "spark-env:SPARK_DAEMON_MEMORY": "4000m",
                      "spark:spark.driver.maxResultSize": "3840m",
                      "spark:spark.driver.memory": "7680m",
                      "spark:spark.executor.cores": "4",
                      "spark:spark.executor.instances": "2",
                      "spark:spark.executor.memory": "11171m",
                      "spark:spark.executorEnv.OPENBLAS_NUM_THREADS": "1",
                      "spark:spark.scheduler.mode": "FAIR",
                      "spark:spark.sql.cbo.enabled": "true",
                      "spark:spark.ui.port": "0",
                      "spark:spark.yarn.am.memory": "640m",
                      "yarn-env:YARN_NODEMANAGER_HEAPSIZE": "4000",
                      "yarn-env:YARN_RESOURCEMANAGER_HEAPSIZE": "4000",
                      "yarn-env:YARN_TIMELINESERVER_HEAPSIZE": "4000",
                      "yarn:yarn.nodemanager.address": "0.0.0.0:8026",
                      "yarn:yarn.nodemanager.resource.cpu-vcores": "8",
                      "yarn:yarn.nodemanager.resource.memory-mb": "24576",
                      "yarn:yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs": "86400",
                      "yarn:yarn.scheduler.maximum-allocation-mb": "24576",
                      "yarn:yarn.scheduler.minimum-allocation-mb": "1024"
                    }
                  }
                ],
                "staging_bucket": "stagifng-dataproc5tfff",
                "temp_bucket": "temp-daftaprotfffff",
                "worker_config": [
                  {
                    "accelerators": [],
                    "disk_config": [
                      {
                        "boot_disk_size_gb": 1024,
                        "boot_disk_type": "pd-standard",
                        "num_local_ssds": 0
                      }
                    ],
                    "image_uri": "https://www.googleapis.com/compute/v1/projects/cloud-dataproc/global/images/dataproc-1-5-ubu18-20211021-060200-rc06",
                    "instance_names": [
                      "mycluster-tf-new-w-0",
                      "mycluster-tf-new-w-1"
                    ],
                    "machine_type": "n1-standard-8",
                    "min_cpu_platform": "Intel Skylake",
                    "num_instances": 2
                  }
                ]
              }
            ],
            "graceful_decommission_timeout": "120s",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/clusters/mycluster-tf-new",
            "labels": {
              "foo": "bar",
              "goog-dataproc-cluster-name": "mycluster-tf-new",
              "goog-dataproc-cluster-uuid": "21564168-a790-428a-9fb4-029dbf0084c8",
              "goog-dataproc-location": "asia-south1"
            },
            "name": "mycluster-tf-new",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.dataproc_module1.google_service_account.sa-name",
            "module.dataproc_module1.google_storage_bucket.staging",
            "module.dataproc_module1.google_storage_bucket.temp",
            "module.main_vpc.google_compute_network.vpc_network",
            "module.main_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/roles/dataproc.worker/serviceaccount:dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "roles/dataproc.worker"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dataproc_module1.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings_df",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/roles/datafusion.runner/serviceaccount:dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "roles/datafusion.runner"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dataproc_module1.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_service_account",
      "name": "sa-name",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "dataprocserviceaccountnewtf1",
            "description": "",
            "display_name": "dataproc-tfnewtf",
            "email": "dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/dataprocserviceaccountnewtf1@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "109458519760222431973"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "staging",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket_policy_only": false,
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "stagifng-dataproc5tfff",
            "labels": null,
            "lifecycle_rule": [],
            "location": "ASIA-SOUTH1",
            "logging": [],
            "name": "stagifng-dataproc5tfff",
            "project": "idea-ind-data-ai-dev",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/stagifng-dataproc5tfff",
            "storage_class": "STANDARD",
            "uniform_bucket_level_access": false,
            "url": "gs://stagifng-dataproc5tfff",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dataproc_module1",
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "temp",
      "provider": "module.dataproc_module1.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket_policy_only": false,
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "temp-daftaprotfffff",
            "labels": null,
            "lifecycle_rule": [],
            "location": "ASIA-SOUTH1",
            "logging": [],
            "name": "temp-daftaprotfffff",
            "project": "idea-ind-data-ai-dev",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/temp-daftaprotfffff",
            "storage_class": "STANDARD",
            "uniform_bucket_level_access": false,
            "url": "gs://temp-daftaprotfffff",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.gke_module[\"one\"]",
      "mode": "managed",
      "type": "google_container_cluster",
      "name": "primary",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "addons_config": [
              {
                "cloudrun_config": [],
                "horizontal_pod_autoscaling": [],
                "http_load_balancing": [],
                "network_policy_config": [
                  {
                    "disabled": true
                  }
                ]
              }
            ],
            "authenticator_groups_config": [],
            "cluster_autoscaling": [
              {
                "auto_provisioning_defaults": [
                  {
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "service_account": "default"
                  }
                ],
                "enabled": true,
                "resource_limits": [
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "cpu"
                  },
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "memory"
                  }
                ]
              }
            ],
            "cluster_ipv4_cidr": "10.0.56.0/21",
            "database_encryption": [
              {
                "key_name": "",
                "state": "DECRYPTED"
              }
            ],
            "datapath_provider": "",
            "default_max_pods_per_node": 110,
            "default_snat_status": [
              {
                "disabled": false
              }
            ],
            "description": "",
            "enable_autopilot": true,
            "enable_binary_authorization": false,
            "enable_intranode_visibility": true,
            "enable_kubernetes_alpha": false,
            "enable_legacy_abac": false,
            "enable_shielded_nodes": true,
            "enable_tpu": false,
            "endpoint": "10.0.52.2",
            "id": "projects/idea-ind-data-ai-dev/locations/asia-south1/clusters/web-gke",
            "initial_node_count": 1,
            "instance_group_urls": [],
            "ip_allocation_policy": [
              {
                "cluster_ipv4_cidr_block": "10.0.56.0/21",
                "cluster_secondary_range_name": "gke-web-gke-pods-851f544d",
                "services_ipv4_cidr_block": "10.0.64.0/24",
                "services_secondary_range_name": "gke-web-gke-services-851f544d"
              }
            ],
            "label_fingerprint": "a9dc16a7",
            "location": "asia-south1",
            "logging_service": "logging.googleapis.com/kubernetes",
            "maintenance_policy": [
              {
                "daily_maintenance_window": [],
                "maintenance_exclusion": [],
                "recurring_window": [
                  {
                    "end_time": "2050-01-01T04:00:00Z",
                    "recurrence": "FREQ=DAILY",
                    "start_time": "2021-06-18T00:00:00Z"
                  }
                ]
              }
            ],
            "master_auth": [
              {
                "client_certificate": "",
                "client_certificate_config": [
                  {
                    "issue_client_certificate": false
                  }
                ],
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMRENDQXBTZ0F3SUJBZ0lRZGcvQ0JXNHNBWDh0WHlFLzhodU1NakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRM01UZGhZekl5WXkwd1ltSmlMVFE0WmpRdFlUZ3hZaTAyTURVME9URm1OMll5TnpBdwpJQmNOTWpJd01qSTFNRFEwTURFMVdoZ1BNakExTWpBeU1UZ3dOVFF3TVRWYU1DOHhMVEFyQmdOVkJBTVRKRGN4Ck4yRmpNakpqTFRCaVltSXRORGhtTkMxaE9ERmlMVFl3TlRRNU1XWTNaakkzTURDQ0FhSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQUt0dDF3U3RzaGR2Q1hMdVZwS25qeEwxSWRFblR1LzF5bThpSFNyYwppQnhQUm05SXhZZEEvcnlWUExuOTRWQVNuUERkNGtCdCtKNTh1TzhjaGJoMHdhQTlIdVFiWFNrcjJCcTNUcUp6CnJLRGZ4eWM0TmI1bGdDR01sTnNWMk5BeTVsa2VYMkpzOUVLNUNIUmRCRUh1TkR5cDlWdkJ1UXh2c25Pc29TOHEKb01waStzRGlQMlh1MzV6RVlyZTlYRmJwNzVlZW0xNXo5WFlxRGxJZzh3L2NwMlZXRGNsU0VNZXQyR0FHUThmdApVQlFkSjZvOFVCYkJFWkZPOEROenZza1UrSWtRVW9TWmpObVBJdGphTHFpbUFEUEIwOHBaMHZpZzhxTlMxdFFHCnQvQlZCakNUSXoyN0YwRUlRRFFiK011OTRlUEp3UzN3aitoMTVJUldqYkR6SUdwQWpDUnhINmdSU0NKNTlRU1AKd3BoSmhncjJ1RnhKcDJFeGlESGgvSXBvUEJEcEJMaDc5d2pIMFpHZE9WSWlPb25HOERwZ1I4UnNuZ3pFNXhxVgpoTXFNcEFvdjhkVUJTMDQ5K1J0UkVDeDhhRnNlcm1uYS8xK3IxT3EvUzkxdzR5WHIvaHlscW13L0ExeUxmOEpuCnJxR1RJQ0VQekxBcE5ZK053TWhWV1ZEanh3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVZNVE4dFNyYzcrOHNuNnhGY21CcjliS21EQUl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFHYlovWjNWK1A2dFVsNXdOT3JHem81Q1lGTVVVR0VjMVVQaDJvZ3VYakZCCmpRdjJOYkhYRTFtNkt4M1p3YThvNFl6aVc4S3lUcCtYdFdQdWV0TmFUay9RTTFlVFZGdEdzSWNBcjh1dVBOQ3MKZm5TVGhtcndmbUwxbmI4ZElEY0VWYkNLUVA5Y3B1WGZmb3NzUmZrdi9weGdqTEFpQkUxRllqTGFmQ1dlNENhMAorZGFPUitkb3g2MEZUY01mRGtHdGVKUldhZXYwTlhpSnoxdnc5WVNZOUt0UDlWd2xGRFZ4KzlueVROand6K0hNCi9tSkhoSFdESXRja2t1Wi9ZL1RuZzB6K1MyU015OUdPOUl4Qm5wS3REM0lNS2Ezclh6VThLWGJPR0MzVnl3bDYKajdwelI5bmk3Z1czS1A4dXpXTlp1ejRqbW40aHhuem1vbjNUbUlKZzMzbllGeGVDcFg3cmtMMEo1ZHpXbWs5cApkbmpJUkc4ZG1xSWpGRHlHNUJ4V21valF3ZDZXMlpaRVEyWEdqaWcxcm1QYjZMRVIwcHNlcDZXaGluTFY4T0R5CnFxKzFTMUNHMG5BVTFTMC9GZHkvMjVMQWwyaHdFTWd1MUdwait2SkpXWmx5U3J6MDJtSXZscWtLNmhJQlB5YlUKVVdrUHBHRXJvR3l4ZVV2RHFwUjY5QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "password": "",
                "username": ""
              }
            ],
            "master_authorized_networks_config": [
              {
                "cidr_blocks": [
                  {
                    "cidr_block": "10.0.0.0/24",
                    "display_name": "jumpx"
                  }
                ]
              }
            ],
            "master_version": "1.21.6-gke.1500",
            "min_master_version": null,
            "monitoring_service": "monitoring.googleapis.com/kubernetes",
            "name": "web-gke",
            "network": "projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "network_policy": [
              {
                "enabled": false,
                "provider": "PROVIDER_UNSPECIFIED"
              }
            ],
            "networking_mode": "VPC_NATIVE",
            "node_config": [
              {
                "disk_size_gb": 100,
                "disk_type": "pd-standard",
                "guest_accelerator": [],
                "image_type": "COS_CONTAINERD",
                "labels": {},
                "local_ssd_count": 0,
                "machine_type": "e2-medium",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/devstorage.read_only",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring",
                  "https://www.googleapis.com/auth/service.management.readonly",
                  "https://www.googleapis.com/auth/servicecontrol",
                  "https://www.googleapis.com/auth/trace.append"
                ],
                "preemptible": false,
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": true
                  }
                ],
                "tags": [],
                "taint": [],
                "workload_metadata_config": [
                  {
                    "node_metadata": "GKE_METADATA_SERVER"
                  }
                ]
              }
            ],
            "node_locations": [
              "asia-south1-a",
              "asia-south1-b",
              "asia-south1-c"
            ],
            "node_pool": [
              {
                "autoscaling": [
                  {
                    "max_node_count": 1000,
                    "min_node_count": 0
                  }
                ],
                "initial_node_count": 1,
                "instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "default-pool",
                "name_prefix": "",
                "node_config": [
                  {
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "guest_accelerator": [],
                    "image_type": "COS_CONTAINERD",
                    "labels": {},
                    "local_ssd_count": 0,
                    "machine_type": "e2-medium",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "node_metadata": "GKE_METADATA_SERVER"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "asia-south1-b",
                  "asia-south1-c"
                ],
                "upgrade_settings": [
                  {
                    "max_surge": 1,
                    "max_unavailable": 0
                  }
                ],
                "version": "1.21.6-gke.1500"
              }
            ],
            "node_version": "1.21.6-gke.1500",
            "operation": null,
            "pod_security_policy_config": [],
            "private_cluster_config": [
              {
                "enable_private_endpoint": true,
                "enable_private_nodes": true,
                "master_global_access_config": [
                  {
                    "enabled": false
                  }
                ],
                "master_ipv4_cidr_block": "10.0.52.0/28",
                "peering_name": "gke-nf2bd4dff5a6edd5e036-7f08-7c9a-peer",
                "private_endpoint": "10.0.52.2",
                "public_endpoint": "34.100.131.167"
              }
            ],
            "private_ipv6_google_access": "",
            "project": "idea-ind-data-ai-dev",
            "release_channel": [
              {
                "channel": "REGULAR"
              }
            ],
            "remove_default_node_pool": null,
            "resource_labels": null,
            "resource_usage_export_config": [],
            "self_link": "https://container.googleapis.com/v1beta1/projects/idea-ind-data-ai-dev/locations/asia-south1/clusters/web-gke",
            "services_ipv4_cidr": "10.0.64.0/24",
            "subnetwork": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-micronode-idea-dev-tf",
            "timeouts": null,
            "tpu_ipv4_cidr_block": "",
            "vertical_pod_autoscaling": [
              {
                "enabled": true
              }
            ],
            "workload_identity_config": [
              {
                "identity_namespace": "idea-ind-data-ai-dev.svc.id.goog"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network",
            "module.main_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.gke_module[\"two\"]",
      "mode": "managed",
      "type": "google_container_cluster",
      "name": "primary",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "addons_config": [
              {
                "cloudrun_config": [],
                "horizontal_pod_autoscaling": [],
                "http_load_balancing": [],
                "network_policy_config": [
                  {
                    "disabled": true
                  }
                ]
              }
            ],
            "authenticator_groups_config": [],
            "cluster_autoscaling": [
              {
                "auto_provisioning_defaults": [
                  {
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "service_account": "default"
                  }
                ],
                "enabled": true,
                "resource_limits": [
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "cpu"
                  },
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "memory"
                  }
                ]
              }
            ],
            "cluster_ipv4_cidr": "10.0.40.0/21",
            "database_encryption": [
              {
                "key_name": "",
                "state": "DECRYPTED"
              }
            ],
            "datapath_provider": "",
            "default_max_pods_per_node": 110,
            "default_snat_status": [
              {
                "disabled": false
              }
            ],
            "description": "",
            "enable_autopilot": true,
            "enable_binary_authorization": false,
            "enable_intranode_visibility": true,
            "enable_kubernetes_alpha": false,
            "enable_legacy_abac": false,
            "enable_shielded_nodes": true,
            "enable_tpu": false,
            "endpoint": "10.0.34.2",
            "id": "projects/idea-ind-data-ai-dev/locations/asia-south1/clusters/micro-gke",
            "initial_node_count": 1,
            "instance_group_urls": [],
            "ip_allocation_policy": [
              {
                "cluster_ipv4_cidr_block": "10.0.40.0/21",
                "cluster_secondary_range_name": "gke-micro-gke-pods-7ed012bc",
                "services_ipv4_cidr_block": "10.0.48.0/24",
                "services_secondary_range_name": "gke-micro-gke-services-7ed012bc"
              }
            ],
            "label_fingerprint": "a9dc16a7",
            "location": "asia-south1",
            "logging_service": "logging.googleapis.com/kubernetes",
            "maintenance_policy": [
              {
                "daily_maintenance_window": [],
                "maintenance_exclusion": [],
                "recurring_window": [
                  {
                    "end_time": "2050-01-01T04:00:00Z",
                    "recurrence": "FREQ=DAILY",
                    "start_time": "2021-06-18T00:00:00Z"
                  }
                ]
              }
            ],
            "master_auth": [
              {
                "client_certificate": "",
                "client_certificate_config": [
                  {
                    "issue_client_certificate": false
                  }
                ],
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMVENDQXBXZ0F3SUJBZ0lSQVBGSWJjaVYzNHNxa21hQVZKT0IzKzR3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa09HRXdPR1JoTm1FdFkyWm1OQzAwWlRjd0xXRXlORGd0WTJVNVlqVXpabVJtTUdKagpNQ0FYRFRJeU1ESXlOVEEwTkRBeE5Wb1lEekl3TlRJd01qRTRNRFUwTURFMVdqQXZNUzB3S3dZRFZRUURFeVE0CllUQTRaR0UyWVMxalptWTBMVFJsTnpBdFlUSTBPQzFqWlRsaU5UTm1aR1l3WW1Nd2dnR2lNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FEVjE0TGtxOUdzVnhDdWZEcFo3NHUrbE9Ga01LV2RrVUdlVXFtcwpmZWZKUVgwVlQ0LzB1RWxnTlcvT0JXRmptQzNoajU2NXljb1BTR0Qrem96TDFJaHAvL3dmRERTMnl5V3hrejVkCjd5d3RUOGV6Znc0cGJzMHFFcWtRU1FENi8xcERrUU9sQnNEU0swb3B4MUtvUFZsS01TZWJvQnFwTHNFd0NSQTgKUnRFa3IyMWM5WnRSNlpETzU5WkxLUkRxRjJPbW45dFFUVWUySDhMRkM2VURVUy9SQXZXYzJlYjdMZHQxUUJsKwoveEV4VVcyUFRzMTJ4ODBXVVMyZmxvRWc0Yzd6T2xocytKd05UMkNRamhQcS9tYTh4N1IxdHlrY2UxVmUzaWVBCnBvamFEZzdXVDFlT3JuNytoK1BBZkg0T1FpMkJKc1B0WHliTi92VXRMNE5TczkzbVR5cTd0S0RYeG8xTlBoS00KRys3K3ZLbXpOanlRU0Y3NEcxQzROOEhXOTEwQ0wyRkcyWnFpWTJGeVoxSkF4QXBtQ2p2TG5yRFVocWZPbkFreAp0aWZ1cjZTVUx5cmNFb0liL1E2V0FDVDhieU9ZbjNobStGdGNSaTMzZFpKQmkxTlU1NllvUXFERUlWOXVNYitXCjg4UXJSeGV2S0lnNEVmY2VjZGFuRnk4ZUx2RUNBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWg2Z3g2aWlYSVlyN0JNenlGZS9tam5XZnpHTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQmdRQjlGV3Q2TStxTTF1VUxlcHljOE9tQWFuTzBtUENrYlNVN3B1c25pdzY3Cld6MGFhMnYyVlF6WVJlTlBnSnNUTndLcGlSQ2dycDdNRjN2Y3BRd3ptWWV3VGFYQTk1NmFrMmZQR21STlNhRlQKWCt3TldtYVo0NCtvbVA2NEpYVFFZbi85SExlNm9JQk0yWlI0ZWkzZjNhZXhSK3NwODZLeENzUU44WmRMNjdjYgpCaG83WG83TTJzR1NxZXFpNjgrZEp0dDZZcGdlaTZLem9RV3pwaHI0SG5JZ0djMUVnMjhZdnRvazlpdTN6R0pBCjJDdnE4Zk51T2Y0dno2eDJkeWpCTDRtVEVzcGM1NDZKd0hQQUxmdjZvanBtS3plWDFKUVo5UWdPTnhyeFN6ZEQKL1cvQytGeDJIbkR3MFljaFMvamVkRlFkNTBMZ1JOYWNGbGhPTDBqUHFoWUtqM21ENnQwQ3JDcVI3YTVCZFFMcApnMHJVMUlqY0J1MDRUWEhyclA1bnZDNS84Unc5YkZYaXc1eW53QXRjY0YrdFphRG95M3RrTHZVaWdTZldTYWkxClJiZlRuRVRlaHpUakppYlRURmY5SENhTlUyeUo0SGw0WmVGaDl5MHdoUDVtZEs3cFdmRkpKVWxPRnovZXAzc3oKbG9ydDVaMFgxUmR5Q0hMeTEzVTAxSDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "password": "",
                "username": ""
              }
            ],
            "master_authorized_networks_config": [
              {
                "cidr_blocks": [
                  {
                    "cidr_block": "10.0.0.0/24",
                    "display_name": "jumpx"
                  }
                ]
              }
            ],
            "master_version": "1.21.6-gke.1500",
            "min_master_version": null,
            "monitoring_service": "monitoring.googleapis.com/kubernetes",
            "name": "micro-gke",
            "network": "projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "network_policy": [
              {
                "enabled": false,
                "provider": "PROVIDER_UNSPECIFIED"
              }
            ],
            "networking_mode": "VPC_NATIVE",
            "node_config": [
              {
                "disk_size_gb": 100,
                "disk_type": "pd-standard",
                "guest_accelerator": [],
                "image_type": "COS_CONTAINERD",
                "labels": {},
                "local_ssd_count": 0,
                "machine_type": "e2-medium",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/devstorage.read_only",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring",
                  "https://www.googleapis.com/auth/service.management.readonly",
                  "https://www.googleapis.com/auth/servicecontrol",
                  "https://www.googleapis.com/auth/trace.append"
                ],
                "preemptible": false,
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": true
                  }
                ],
                "tags": [],
                "taint": [],
                "workload_metadata_config": [
                  {
                    "node_metadata": "GKE_METADATA_SERVER"
                  }
                ]
              }
            ],
            "node_locations": [
              "asia-south1-a",
              "asia-south1-b",
              "asia-south1-c"
            ],
            "node_pool": [
              {
                "autoscaling": [
                  {
                    "max_node_count": 1000,
                    "min_node_count": 0
                  }
                ],
                "initial_node_count": 1,
                "instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "default-pool",
                "name_prefix": "",
                "node_config": [
                  {
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "guest_accelerator": [],
                    "image_type": "COS_CONTAINERD",
                    "labels": {},
                    "local_ssd_count": 0,
                    "machine_type": "e2-medium",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "node_metadata": "GKE_METADATA_SERVER"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "asia-south1-a",
                  "asia-south1-c"
                ],
                "upgrade_settings": [
                  {
                    "max_surge": 1,
                    "max_unavailable": 0
                  }
                ],
                "version": "1.21.6-gke.1500"
              }
            ],
            "node_version": "1.21.6-gke.1500",
            "operation": null,
            "pod_security_policy_config": [],
            "private_cluster_config": [
              {
                "enable_private_endpoint": true,
                "enable_private_nodes": true,
                "master_global_access_config": [
                  {
                    "enabled": false
                  }
                ],
                "master_ipv4_cidr_block": "10.0.34.0/28",
                "peering_name": "gke-nf2bd4dff5a6edd5e036-7f08-7c9a-peer",
                "private_endpoint": "10.0.34.2",
                "public_endpoint": "34.100.208.58"
              }
            ],
            "private_ipv6_google_access": "",
            "project": "idea-ind-data-ai-dev",
            "release_channel": [
              {
                "channel": "REGULAR"
              }
            ],
            "remove_default_node_pool": null,
            "resource_labels": null,
            "resource_usage_export_config": [],
            "self_link": "https://container.googleapis.com/v1beta1/projects/idea-ind-data-ai-dev/locations/asia-south1/clusters/micro-gke",
            "services_ipv4_cidr": "10.0.48.0/24",
            "subnetwork": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-micronode-idea-dev-tf",
            "timeouts": null,
            "tpu_ipv4_cidr_block": "",
            "vertical_pod_autoscaling": [
              {
                "enabled": true
              }
            ],
            "workload_identity_config": [
              {
                "identity_namespace": "idea-ind-data-ai-dev.svc.id.goog"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network",
            "module.main_vpc.google_compute_subnetwork.subnet"
          ]
        }
      ]
    },
    {
      "module": "module.main_vpc",
      "mode": "managed",
      "type": "google_compute_network",
      "name": "vpc_network",
      "provider": "module.main_vpc.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "mtu": 1460,
            "name": "vpc-idea-dev-tf",
            "project": "idea-ind-data-ai-dev",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.main_vpc",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "subnet",
      "provider": "module.main_vpc.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.313-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.0.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-jumpbox-idea-dev-tf",
            "ip_cidr_range": "10.0.0.0/24",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-jumpbox-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-jumpbox-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.969-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.16.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-app-idea-dev-tf",
            "ip_cidr_range": "10.0.16.0/20",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-app-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-app-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.367-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.32.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-data-idea-dev-tf",
            "ip_cidr_range": "10.0.32.0/24",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-data-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-data-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:53.034-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.33.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-webnode-idea-dev-tf",
            "ip_cidr_range": "10.0.33.0/24",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-webnode-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-webnode-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.321-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.50.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-micronode-idea-dev-tf",
            "ip_cidr_range": "10.0.50.0/23",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-micronode-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-micronode-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 5,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.570-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.66.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-dataproc-idea-dev-tf",
            "ip_cidr_range": "10.0.66.0/24",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-dataproc-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-dataproc-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 6,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.172-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.110.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-composer1-uscentral1-idea-dev-tf",
            "ip_cidr_range": "10.0.110.0/24",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-composer1-uscentral1-idea-dev-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-composer1-uscentral1-idea-dev-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        },
        {
          "index_key": 7,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-02-24T21:39:52.770-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.0.67.1",
            "id": "projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-vertex-idea-tf",
            "ip_cidr_range": "10.0.67.0/24",
            "log_config": [
              {
                "aggregation_interval": "INTERVAL_5_SEC",
                "filter_expr": "true",
                "flow_sampling": 0.5,
                "metadata": "EXCLUDE_ALL_METADATA",
                "metadata_fields": null
              }
            ],
            "name": "snet-vertex-idea-tf",
            "network": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/global/networks/vpc-idea-dev-tf",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "idea-ind-data-ai-dev",
            "region": "asia-south1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/idea-ind-data-ai-dev/regions/asia-south1/subnetworks/snet-vertex-idea-tf",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.main_vpc.google_compute_network.vpc_network"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_custom_role",
      "name": "my-custom-role",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "deleted": false,
            "description": "A description",
            "id": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf",
            "name": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf",
            "permissions": [
              "apigateway.apiconfigs.create",
              "apigateway.apiconfigs.delete",
              "apigateway.apiconfigs.get",
              "apigateway.apiconfigs.getIamPolicy",
              "apigateway.apiconfigs.list",
              "apigateway.apiconfigs.setIamPolicy",
              "apigateway.apiconfigs.update",
              "apigateway.apis.create",
              "apigateway.apis.delete",
              "apigateway.apis.get",
              "apigateway.apis.getIamPolicy",
              "apigateway.apis.list",
              "apigateway.apis.setIamPolicy",
              "apigateway.apis.update",
              "apigateway.gateways.create",
              "apigateway.gateways.delete",
              "apigateway.gateways.get",
              "apigateway.gateways.getIamPolicy",
              "apigateway.gateways.list",
              "apigateway.gateways.setIamPolicy",
              "apigateway.gateways.update",
              "apigateway.locations.get",
              "apigateway.locations.list",
              "apigateway.operations.cancel",
              "apigateway.operations.delete",
              "apigateway.operations.get",
              "apigateway.operations.list",
              "apigee.apiproductattributes.createOrUpdateAll",
              "apigee.apiproductattributes.delete",
              "apigee.apiproductattributes.get",
              "apigee.apiproductattributes.list",
              "apigee.apiproductattributes.update",
              "apigee.apiproducts.create",
              "apigee.apiproducts.delete",
              "apigee.apiproducts.get",
              "apigee.apiproducts.list",
              "apigee.apiproducts.update",
              "apigee.appkeys.create",
              "apigee.appkeys.delete",
              "apigee.appkeys.get",
              "apigee.appkeys.manage",
              "apigee.apps.get",
              "apigee.apps.list",
              "apigee.archivedeployments.create",
              "apigee.archivedeployments.delete",
              "apigee.archivedeployments.download",
              "apigee.archivedeployments.get",
              "apigee.archivedeployments.list",
              "apigee.archivedeployments.update",
              "apigee.archivedeployments.upload",
              "apigee.caches.delete",
              "apigee.caches.list",
              "apigee.canaryevaluations.create",
              "apigee.canaryevaluations.get",
              "apigee.datacollectors.create",
              "apigee.datacollectors.delete",
              "apigee.datacollectors.get",
              "apigee.datacollectors.list",
              "apigee.datacollectors.update",
              "apigee.datastores.create",
              "apigee.datastores.delete",
              "apigee.datastores.get",
              "apigee.datastores.list",
              "apigee.datastores.update",
              "apigee.deployments.create",
              "apigee.deployments.delete",
              "apigee.deployments.get",
              "apigee.deployments.list",
              "apigee.deployments.update",
              "apigee.developerappattributes.createOrUpdateAll",
              "apigee.developerappattributes.delete",
              "apigee.developerappattributes.get",
              "apigee.developerappattributes.list",
              "apigee.developerappattributes.update",
              "apigee.developerapps.create",
              "apigee.developerapps.delete",
              "apigee.developerapps.get",
              "apigee.developerapps.list",
              "apigee.developerapps.manage",
              "apigee.developerattributes.createOrUpdateAll",
              "apigee.developerattributes.delete",
              "apigee.developerattributes.get",
              "apigee.developerattributes.list",
              "apigee.developerattributes.update",
              "apigee.developerbalances.adjust",
              "apigee.developerbalances.get",
              "apigee.developerbalances.update",
              "apigee.developermonetizationconfigs.get",
              "apigee.developermonetizationconfigs.update",
              "apigee.developers.create",
              "apigee.developers.delete",
              "apigee.developers.get",
              "apigee.developers.list",
              "apigee.developers.update",
              "apigee.developersubscriptions.create",
              "apigee.developersubscriptions.get",
              "apigee.developersubscriptions.list",
              "apigee.developersubscriptions.update",
              "apigee.envgroupattachments.create",
              "apigee.envgroupattachments.delete",
              "apigee.envgroupattachments.get",
              "apigee.envgroupattachments.list",
              "apigee.envgroups.create",
              "apigee.envgroups.delete",
              "apigee.envgroups.get",
              "apigee.envgroups.list",
              "apigee.envgroups.update",
              "apigee.environments.create",
              "apigee.environments.delete",
              "apigee.environments.get",
              "apigee.environments.getDataLocation",
              "apigee.environments.getIamPolicy",
              "apigee.environments.getStats",
              "apigee.environments.list",
              "apigee.environments.manageRuntime",
              "apigee.environments.setIamPolicy",
              "apigee.environments.update",
              "apigee.exports.create",
              "apigee.exports.get",
              "apigee.exports.list",
              "apigee.flowhooks.attachSharedFlow",
              "apigee.flowhooks.detachSharedFlow",
              "apigee.flowhooks.getSharedFlow",
              "apigee.flowhooks.list",
              "apigee.hostqueries.create",
              "apigee.hostqueries.get",
              "apigee.hostqueries.list",
              "apigee.hostsecurityreports.create",
              "apigee.hostsecurityreports.get",
              "apigee.hostsecurityreports.list",
              "apigee.hoststats.get",
              "apigee.ingressconfigs.get",
              "apigee.instanceattachments.create",
              "apigee.instanceattachments.delete",
              "apigee.instanceattachments.get",
              "apigee.instanceattachments.list",
              "apigee.instances.create",
              "apigee.instances.delete",
              "apigee.instances.get",
              "apigee.instances.list",
              "apigee.instances.reportStatus",
              "apigee.keystorealiases.create",
              "apigee.keystorealiases.delete",
              "apigee.keystorealiases.exportCertificate",
              "apigee.keystorealiases.generateCSR",
              "apigee.keystorealiases.get",
              "apigee.keystorealiases.list",
              "apigee.keystorealiases.update",
              "apigee.keystores.create",
              "apigee.keystores.delete",
              "apigee.keystores.export",
              "apigee.keystores.get",
              "apigee.keystores.list",
              "apigee.keyvaluemaps.create",
              "apigee.keyvaluemaps.delete",
              "apigee.keyvaluemaps.list",
              "apigee.maskconfigs.get",
              "apigee.maskconfigs.update",
              "apigee.operations.get",
              "apigee.operations.list",
              "apigee.organizations.create",
              "apigee.organizations.delete",
              "apigee.organizations.get",
              "apigee.organizations.list",
              "apigee.organizations.update",
              "apigee.portals.create",
              "apigee.portals.delete",
              "apigee.portals.get",
              "apigee.portals.list",
              "apigee.portals.update",
              "apigee.projects.update",
              "apigee.proxies.create",
              "apigee.proxies.delete",
              "apigee.proxies.get",
              "apigee.proxies.list",
              "apigee.proxies.update",
              "apigee.proxyrevisions.delete",
              "apigee.proxyrevisions.deploy",
              "apigee.proxyrevisions.get",
              "apigee.proxyrevisions.list",
              "apigee.proxyrevisions.undeploy",
              "apigee.proxyrevisions.update",
              "apigee.queries.create",
              "apigee.queries.get",
              "apigee.queries.list",
              "apigee.rateplans.create",
              "apigee.rateplans.delete",
              "apigee.rateplans.get",
              "apigee.rateplans.list",
              "apigee.rateplans.update",
              "apigee.references.create",
              "apigee.references.delete",
              "apigee.references.get",
              "apigee.references.list",
              "apigee.references.update",
              "apigee.reports.create",
              "apigee.reports.delete",
              "apigee.reports.get",
              "apigee.reports.list",
              "apigee.reports.update",
              "apigee.resourcefiles.create",
              "apigee.resourcefiles.delete",
              "apigee.resourcefiles.get",
              "apigee.resourcefiles.list",
              "apigee.resourcefiles.update",
              "apigee.runtimeconfigs.get",
              "apigee.securityreports.create",
              "apigee.securityreports.get",
              "apigee.securityreports.list",
              "apigee.sharedflowrevisions.delete",
              "apigee.sharedflowrevisions.deploy",
              "apigee.sharedflowrevisions.get",
              "apigee.sharedflowrevisions.list",
              "apigee.sharedflowrevisions.undeploy",
              "apigee.sharedflowrevisions.update",
              "apigee.sharedflows.create",
              "apigee.sharedflows.delete",
              "apigee.sharedflows.get",
              "apigee.sharedflows.list",
              "apigee.targetservers.create",
              "apigee.targetservers.delete",
              "apigee.targetservers.get",
              "apigee.targetservers.list",
              "apigee.targetservers.update",
              "apigee.tracesessions.create",
              "apigee.tracesessions.delete",
              "apigee.tracesessions.get",
              "apigee.tracesessions.list",
              "bigquery.bireservations.get",
              "bigquery.capacityCommitments.get",
              "bigquery.capacityCommitments.list",
              "bigquery.config.get",
              "bigquery.datasets.create",
              "bigquery.datasets.get",
              "bigquery.datasets.getIamPolicy",
              "bigquery.datasets.updateTag",
              "bigquery.jobs.create",
              "bigquery.jobs.list",
              "bigquery.models.create",
              "bigquery.models.delete",
              "bigquery.models.export",
              "bigquery.models.getData",
              "bigquery.models.getMetadata",
              "bigquery.models.list",
              "bigquery.models.updateData",
              "bigquery.models.updateMetadata",
              "bigquery.models.updateTag",
              "bigquery.readsessions.create",
              "bigquery.readsessions.getData",
              "bigquery.readsessions.update",
              "bigquery.reservationAssignments.list",
              "bigquery.reservationAssignments.search",
              "bigquery.reservations.get",
              "bigquery.reservations.list",
              "bigquery.routines.create",
              "bigquery.routines.delete",
              "bigquery.routines.get",
              "bigquery.routines.list",
              "bigquery.routines.update",
              "bigquery.routines.updateTag",
              "bigquery.savedqueries.get",
              "bigquery.savedqueries.list",
              "bigquery.tables.create",
              "bigquery.tables.createSnapshot",
              "bigquery.tables.delete",
              "bigquery.tables.export",
              "bigquery.tables.get",
              "bigquery.tables.getData",
              "bigquery.tables.getIamPolicy",
              "bigquery.tables.list",
              "bigquery.tables.restoreSnapshot",
              "bigquery.tables.update",
              "bigquery.tables.updateData",
              "bigquery.tables.updateTag",
              "bigquery.transfers.get",
              "cloudnotifications.activities.list",
              "composer.dags.execute",
              "composer.dags.get",
              "composer.dags.list",
              "composer.environments.get",
              "composer.environments.list",
              "composer.imageversions.list",
              "composer.operations.delete",
              "composer.operations.get",
              "composer.operations.list",
              "compute.instances.get",
              "compute.instances.getScreenshot",
              "compute.instances.list",
              "compute.machineTypes.get",
              "compute.machineTypes.list",
              "compute.networks.get",
              "compute.networks.list",
              "compute.projects.get",
              "compute.regions.get",
              "compute.regions.list",
              "compute.zones.get",
              "compute.zones.list",
              "container.apiServices.get",
              "container.apiServices.getStatus",
              "container.apiServices.list",
              "container.auditSinks.get",
              "container.auditSinks.list",
              "container.backendConfigs.get",
              "container.backendConfigs.list",
              "container.bindings.get",
              "container.bindings.list",
              "container.certificateSigningRequests.get",
              "container.certificateSigningRequests.getStatus",
              "container.certificateSigningRequests.list",
              "container.clusterRoleBindings.get",
              "container.clusterRoleBindings.list",
              "container.clusterRoles.get",
              "container.clusterRoles.list",
              "container.clusters.get",
              "container.clusters.list",
              "container.componentStatuses.get",
              "container.componentStatuses.list",
              "container.configMaps.get",
              "container.configMaps.list",
              "container.controllerRevisions.get",
              "container.controllerRevisions.list",
              "container.cronJobs.get",
              "container.cronJobs.getStatus",
              "container.cronJobs.list",
              "container.csiDrivers.get",
              "container.csiDrivers.list",
              "container.csiNodeInfos.get",
              "container.csiNodeInfos.list",
              "container.csiNodes.get",
              "container.csiNodes.list",
              "container.customResourceDefinitions.get",
              "container.customResourceDefinitions.getStatus",
              "container.customResourceDefinitions.list",
              "container.daemonSets.get",
              "container.daemonSets.getStatus",
              "container.daemonSets.list",
              "container.deployments.get",
              "container.deployments.getScale",
              "container.deployments.getStatus",
              "container.deployments.list",
              "container.endpointSlices.get",
              "container.endpointSlices.list",
              "container.endpoints.get",
              "container.endpoints.list",
              "container.events.get",
              "container.events.list",
              "container.frontendConfigs.get",
              "container.frontendConfigs.list",
              "container.horizontalPodAutoscalers.get",
              "container.horizontalPodAutoscalers.getStatus",
              "container.horizontalPodAutoscalers.list",
              "container.ingresses.get",
              "container.ingresses.getStatus",
              "container.ingresses.list",
              "container.initializerConfigurations.get",
              "container.initializerConfigurations.list",
              "container.jobs.get",
              "container.jobs.getStatus",
              "container.jobs.list",
              "container.leases.get",
              "container.leases.list",
              "container.limitRanges.get",
              "container.limitRanges.list",
              "container.managedCertificates.get",
              "container.managedCertificates.list",
              "container.mutatingWebhookConfigurations.get",
              "container.mutatingWebhookConfigurations.list",
              "container.namespaces.get",
              "container.namespaces.getStatus",
              "container.namespaces.list",
              "container.networkPolicies.get",
              "container.networkPolicies.list",
              "container.nodes.get",
              "container.nodes.getStatus",
              "container.nodes.list",
              "container.operations.get",
              "container.operations.list",
              "container.persistentVolumeClaims.get",
              "container.persistentVolumeClaims.getStatus",
              "container.persistentVolumeClaims.list",
              "container.persistentVolumes.get",
              "container.persistentVolumes.getStatus",
              "container.persistentVolumes.list",
              "container.petSets.get",
              "container.petSets.list",
              "container.podDisruptionBudgets.get",
              "container.podDisruptionBudgets.getStatus",
              "container.podDisruptionBudgets.list",
              "container.podPresets.get",
              "container.podPresets.list",
              "container.podSecurityPolicies.get",
              "container.podSecurityPolicies.list",
              "container.podTemplates.get",
              "container.podTemplates.list",
              "container.pods.get",
              "container.pods.getStatus",
              "container.pods.list",
              "container.priorityClasses.get",
              "container.priorityClasses.list",
              "container.replicaSets.get",
              "container.replicaSets.getScale",
              "container.replicaSets.getStatus",
              "container.replicaSets.list",
              "container.replicationControllers.get",
              "container.replicationControllers.getScale",
              "container.replicationControllers.getStatus",
              "container.replicationControllers.list",
              "container.resourceQuotas.get",
              "container.resourceQuotas.getStatus",
              "container.resourceQuotas.list",
              "container.roleBindings.get",
              "container.roleBindings.list",
              "container.roles.get",
              "container.roles.list",
              "container.runtimeClasses.get",
              "container.runtimeClasses.list",
              "container.scheduledJobs.get",
              "container.scheduledJobs.list",
              "container.serviceAccounts.get",
              "container.serviceAccounts.list",
              "container.services.get",
              "container.services.getStatus",
              "container.services.list",
              "container.statefulSets.get",
              "container.statefulSets.getScale",
              "container.statefulSets.getStatus",
              "container.statefulSets.list",
              "container.storageClasses.get",
              "container.storageClasses.list",
              "container.storageStates.get",
              "container.storageStates.getStatus",
              "container.storageStates.list",
              "container.storageVersionMigrations.get",
              "container.storageVersionMigrations.getStatus",
              "container.storageVersionMigrations.list",
              "container.thirdPartyObjects.get",
              "container.thirdPartyObjects.list",
              "container.thirdPartyResources.get",
              "container.thirdPartyResources.list",
              "container.tokenReviews.create",
              "container.updateInfos.get",
              "container.updateInfos.list",
              "container.validatingWebhookConfigurations.get",
              "container.validatingWebhookConfigurations.list",
              "container.volumeAttachments.get",
              "container.volumeAttachments.getStatus",
              "container.volumeAttachments.list",
              "container.volumeSnapshotClasses.get",
              "container.volumeSnapshotClasses.list",
              "container.volumeSnapshotContents.get",
              "container.volumeSnapshotContents.getStatus",
              "container.volumeSnapshotContents.list",
              "container.volumeSnapshots.get",
              "container.volumeSnapshots.list",
              "dataflow.jobs.cancel",
              "dataflow.jobs.create",
              "dataflow.jobs.get",
              "dataflow.jobs.list",
              "dataflow.jobs.snapshot",
              "dataflow.jobs.updateContents",
              "dataflow.messages.list",
              "dataflow.metrics.get",
              "dataflow.snapshots.delete",
              "dataflow.snapshots.get",
              "dataflow.snapshots.list",
              "datafusion.instances.get",
              "datafusion.instances.getIamPolicy",
              "datafusion.instances.list",
              "datafusion.locations.get",
              "datafusion.locations.list",
              "datafusion.operations.cancel",
              "datafusion.operations.get",
              "datafusion.operations.list",
              "dataproc.autoscalingPolicies.get",
              "dataproc.autoscalingPolicies.list",
              "dataproc.autoscalingPolicies.use",
              "dataproc.clusters.get",
              "dataproc.clusters.list",
              "dataproc.clusters.use",
              "dataproc.jobs.cancel",
              "dataproc.jobs.create",
              "dataproc.jobs.delete",
              "dataproc.jobs.get",
              "dataproc.jobs.list",
              "dataproc.jobs.update",
              "dataproc.operations.cancel",
              "dataproc.operations.delete",
              "dataproc.operations.get",
              "dataproc.operations.list",
              "dataproc.workflowTemplates.create",
              "dataproc.workflowTemplates.delete",
              "dataproc.workflowTemplates.get",
              "dataproc.workflowTemplates.instantiate",
              "dataproc.workflowTemplates.instantiateInline",
              "dataproc.workflowTemplates.list",
              "dataproc.workflowTemplates.update",
              "firebaseauth.configs.create",
              "firebaseauth.configs.get",
              "firebaseauth.configs.getHashConfig",
              "firebaseauth.configs.update",
              "firebaseauth.users.create",
              "firebaseauth.users.createSession",
              "firebaseauth.users.delete",
              "firebaseauth.users.get",
              "firebaseauth.users.sendEmail",
              "firebaseauth.users.update",
              "iam.serviceAccounts.actAs",
              "iam.serviceAccounts.get",
              "iam.serviceAccounts.list",
              "monitoring.alertPolicies.get",
              "monitoring.alertPolicies.list",
              "monitoring.dashboards.get",
              "monitoring.dashboards.list",
              "monitoring.groups.get",
              "monitoring.groups.list",
              "monitoring.metricDescriptors.get",
              "monitoring.metricDescriptors.list",
              "monitoring.monitoredResourceDescriptors.get",
              "monitoring.monitoredResourceDescriptors.list",
              "monitoring.notificationChannelDescriptors.get",
              "monitoring.notificationChannelDescriptors.list",
              "monitoring.notificationChannels.get",
              "monitoring.notificationChannels.list",
              "monitoring.publicWidgets.get",
              "monitoring.publicWidgets.list",
              "monitoring.services.get",
              "monitoring.services.list",
              "monitoring.slos.get",
              "monitoring.slos.list",
              "monitoring.timeSeries.list",
              "monitoring.uptimeCheckConfigs.get",
              "monitoring.uptimeCheckConfigs.list",
              "opsconfigmonitoring.resourceMetadata.list",
              "resourcemanager.projects.get",
              "resourcemanager.projects.getIamPolicy",
              "secretmanager.locations.get",
              "secretmanager.locations.list",
              "secretmanager.secrets.create",
              "secretmanager.secrets.delete",
              "secretmanager.secrets.get",
              "secretmanager.secrets.getIamPolicy",
              "secretmanager.secrets.list",
              "secretmanager.secrets.setIamPolicy",
              "secretmanager.secrets.update",
              "secretmanager.versions.access",
              "secretmanager.versions.add",
              "secretmanager.versions.destroy",
              "secretmanager.versions.disable",
              "secretmanager.versions.enable",
              "secretmanager.versions.get",
              "secretmanager.versions.list",
              "servicemanagement.services.get",
              "serviceusage.quotas.get",
              "serviceusage.services.get",
              "serviceusage.services.list",
              "stackdriver.projects.get",
              "storage.buckets.get",
              "storage.buckets.getIamPolicy",
              "storage.buckets.list",
              "storage.buckets.listTagBindings",
              "storage.multipartUploads.abort",
              "storage.multipartUploads.create",
              "storage.multipartUploads.list",
              "storage.multipartUploads.listParts",
              "storage.objects.create",
              "storage.objects.delete",
              "storage.objects.list"
            ],
            "project": "idea-ind-data-ai-dev",
            "role_id": "Dataproc_Developer_tf",
            "stage": "GA",
            "title": "CDF_Developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_custom_role",
      "name": "my-custom-role1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "deleted": false,
            "description": "A description",
            "id": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf1",
            "name": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf1",
            "permissions": [
              "apigee.apiproductattributes.get",
              "apigee.apiproductattributes.list",
              "apigee.apiproducts.get",
              "apigee.apiproducts.list",
              "apigee.appkeys.get",
              "apigee.apps.get",
              "apigee.apps.list",
              "apigee.archivedeployments.download",
              "apigee.archivedeployments.get",
              "apigee.archivedeployments.list",
              "apigee.caches.list",
              "apigee.canaryevaluations.get",
              "apigee.datacollectors.get",
              "apigee.datacollectors.list",
              "apigee.datastores.get",
              "apigee.datastores.list",
              "apigee.deployments.get",
              "apigee.deployments.list",
              "apigee.developerappattributes.get",
              "apigee.developerappattributes.list",
              "apigee.developerapps.get",
              "apigee.developerapps.list",
              "apigee.developerattributes.get",
              "apigee.developerattributes.list",
              "apigee.developerbalances.get",
              "apigee.developermonetizationconfigs.get",
              "apigee.developers.get",
              "apigee.developers.list",
              "apigee.developersubscriptions.get",
              "apigee.developersubscriptions.list",
              "apigee.envgroupattachments.get",
              "apigee.envgroupattachments.list",
              "apigee.envgroups.get",
              "apigee.envgroups.list",
              "apigee.environments.get",
              "apigee.environments.getDataLocation",
              "apigee.environments.getIamPolicy",
              "apigee.environments.getStats",
              "apigee.environments.list",
              "apigee.exports.get",
              "apigee.exports.list",
              "apigee.flowhooks.getSharedFlow",
              "apigee.flowhooks.list",
              "apigee.hostqueries.get",
              "apigee.hostqueries.list",
              "apigee.hostsecurityreports.get",
              "apigee.hostsecurityreports.list",
              "apigee.hoststats.get",
              "apigee.ingressconfigs.get",
              "apigee.instanceattachments.get",
              "apigee.instanceattachments.list",
              "apigee.instances.get",
              "apigee.instances.list",
              "apigee.keystorealiases.get",
              "apigee.keystorealiases.list",
              "apigee.keystores.get",
              "apigee.keystores.list",
              "apigee.keyvaluemaps.list",
              "apigee.maskconfigs.get",
              "apigee.operations.get",
              "apigee.operations.list",
              "apigee.organizations.get",
              "apigee.organizations.list",
              "apigee.portals.get",
              "apigee.portals.list",
              "apigee.proxies.get",
              "apigee.proxies.list",
              "apigee.proxyrevisions.get",
              "apigee.proxyrevisions.list",
              "apigee.queries.get",
              "apigee.queries.list",
              "apigee.rateplans.get",
              "apigee.rateplans.list",
              "apigee.references.get",
              "apigee.references.list",
              "apigee.reports.get",
              "apigee.reports.list",
              "apigee.resourcefiles.get",
              "apigee.resourcefiles.list",
              "apigee.runtimeconfigs.get",
              "apigee.securityreports.get",
              "apigee.securityreports.list",
              "apigee.sharedflowrevisions.get",
              "apigee.sharedflowrevisions.list",
              "apigee.sharedflows.get",
              "apigee.sharedflows.list",
              "apigee.targetservers.get",
              "apigee.targetservers.list",
              "apigee.tracesessions.get",
              "apigee.tracesessions.list",
              "bigquery.bireservations.get",
              "bigquery.capacityCommitments.get",
              "bigquery.capacityCommitments.list",
              "bigquery.config.get",
              "bigquery.datasets.create",
              "bigquery.datasets.get",
              "bigquery.datasets.getIamPolicy",
              "bigquery.datasets.updateTag",
              "bigquery.jobs.create",
              "bigquery.jobs.list",
              "bigquery.models.create",
              "bigquery.models.delete",
              "bigquery.models.export",
              "bigquery.models.getData",
              "bigquery.models.getMetadata",
              "bigquery.models.list",
              "bigquery.models.updateData",
              "bigquery.models.updateMetadata",
              "bigquery.models.updateTag",
              "bigquery.readsessions.create",
              "bigquery.readsessions.getData",
              "bigquery.readsessions.update",
              "bigquery.reservationAssignments.list",
              "bigquery.reservationAssignments.search",
              "bigquery.reservations.get",
              "bigquery.reservations.list",
              "bigquery.routines.create",
              "bigquery.routines.delete",
              "bigquery.routines.get",
              "bigquery.routines.list",
              "bigquery.routines.update",
              "bigquery.routines.updateTag",
              "bigquery.savedqueries.get",
              "bigquery.savedqueries.list",
              "bigquery.tables.create",
              "bigquery.tables.createSnapshot",
              "bigquery.tables.delete",
              "bigquery.tables.export",
              "bigquery.tables.get",
              "bigquery.tables.getData",
              "bigquery.tables.getIamPolicy",
              "bigquery.tables.list",
              "bigquery.tables.restoreSnapshot",
              "bigquery.tables.update",
              "bigquery.tables.updateData",
              "bigquery.tables.updateTag",
              "bigquery.transfers.get",
              "cloudbuild.builds.get",
              "cloudbuild.builds.list",
              "cloudfunctions.functions.call",
              "cloudfunctions.functions.get",
              "cloudfunctions.functions.invoke",
              "cloudfunctions.functions.list",
              "cloudfunctions.functions.sourceCodeGet",
              "cloudfunctions.functions.sourceCodeSet",
              "cloudfunctions.functions.update",
              "cloudfunctions.locations.get",
              "cloudfunctions.locations.list",
              "cloudfunctions.operations.get",
              "cloudfunctions.operations.list",
              "cloudnotifications.activities.list",
              "composer.dags.execute",
              "composer.dags.get",
              "composer.dags.list",
              "composer.environments.create",
              "composer.environments.delete",
              "composer.environments.get",
              "composer.environments.list",
              "composer.environments.update",
              "composer.imageversions.list",
              "composer.operations.delete",
              "composer.operations.get",
              "composer.operations.list",
              "compute.instances.get",
              "compute.instances.getScreenshot",
              "compute.instances.list",
              "compute.machineTypes.get",
              "compute.machineTypes.list",
              "compute.networks.get",
              "compute.networks.list",
              "compute.projects.get",
              "compute.regions.get",
              "compute.regions.list",
              "compute.zones.get",
              "compute.zones.list",
              "container.apiServices.get",
              "container.apiServices.getStatus",
              "container.apiServices.list",
              "container.auditSinks.get",
              "container.auditSinks.list",
              "container.backendConfigs.get",
              "container.backendConfigs.list",
              "container.bindings.get",
              "container.bindings.list",
              "container.certificateSigningRequests.get",
              "container.certificateSigningRequests.getStatus",
              "container.certificateSigningRequests.list",
              "container.clusterRoleBindings.get",
              "container.clusterRoleBindings.list",
              "container.clusterRoles.get",
              "container.clusterRoles.list",
              "container.clusters.get",
              "container.clusters.list",
              "container.componentStatuses.get",
              "container.componentStatuses.list",
              "container.configMaps.get",
              "container.configMaps.list",
              "container.controllerRevisions.get",
              "container.controllerRevisions.list",
              "container.cronJobs.get",
              "container.cronJobs.getStatus",
              "container.cronJobs.list",
              "container.csiDrivers.get",
              "container.csiDrivers.list",
              "container.csiNodeInfos.get",
              "container.csiNodeInfos.list",
              "container.csiNodes.get",
              "container.csiNodes.list",
              "container.customResourceDefinitions.get",
              "container.customResourceDefinitions.getStatus",
              "container.customResourceDefinitions.list",
              "container.daemonSets.get",
              "container.daemonSets.getStatus",
              "container.daemonSets.list",
              "container.deployments.get",
              "container.deployments.getScale",
              "container.deployments.getStatus",
              "container.deployments.list",
              "container.endpointSlices.get",
              "container.endpointSlices.list",
              "container.endpoints.get",
              "container.endpoints.list",
              "container.events.get",
              "container.events.list",
              "container.frontendConfigs.get",
              "container.frontendConfigs.list",
              "container.horizontalPodAutoscalers.get",
              "container.horizontalPodAutoscalers.getStatus",
              "container.horizontalPodAutoscalers.list",
              "container.ingresses.get",
              "container.ingresses.getStatus",
              "container.ingresses.list",
              "container.initializerConfigurations.get",
              "container.initializerConfigurations.list",
              "container.jobs.get",
              "container.jobs.getStatus",
              "container.jobs.list",
              "container.leases.get",
              "container.leases.list",
              "container.limitRanges.get",
              "container.limitRanges.list",
              "container.managedCertificates.get",
              "container.managedCertificates.list",
              "container.mutatingWebhookConfigurations.get",
              "container.mutatingWebhookConfigurations.list",
              "container.namespaces.get",
              "container.namespaces.getStatus",
              "container.namespaces.list",
              "container.networkPolicies.get",
              "container.networkPolicies.list",
              "container.nodes.get",
              "container.nodes.getStatus",
              "container.nodes.list",
              "container.operations.get",
              "container.operations.list",
              "container.persistentVolumeClaims.get",
              "container.persistentVolumeClaims.getStatus",
              "container.persistentVolumeClaims.list",
              "container.persistentVolumes.get",
              "container.persistentVolumes.getStatus",
              "container.persistentVolumes.list",
              "container.petSets.get",
              "container.petSets.list",
              "container.podDisruptionBudgets.get",
              "container.podDisruptionBudgets.getStatus",
              "container.podDisruptionBudgets.list",
              "container.podPresets.get",
              "container.podPresets.list",
              "container.podSecurityPolicies.get",
              "container.podSecurityPolicies.list",
              "container.podTemplates.get",
              "container.podTemplates.list",
              "container.pods.get",
              "container.pods.getStatus",
              "container.pods.list",
              "container.priorityClasses.get",
              "container.priorityClasses.list",
              "container.replicaSets.get",
              "container.replicaSets.getScale",
              "container.replicaSets.getStatus",
              "container.replicaSets.list",
              "container.replicationControllers.get",
              "container.replicationControllers.getScale",
              "container.replicationControllers.getStatus",
              "container.replicationControllers.list",
              "container.resourceQuotas.get",
              "container.resourceQuotas.getStatus",
              "container.resourceQuotas.list",
              "container.roleBindings.get",
              "container.roleBindings.list",
              "container.roles.get",
              "container.roles.list",
              "container.runtimeClasses.get",
              "container.runtimeClasses.list",
              "container.scheduledJobs.get",
              "container.scheduledJobs.list",
              "container.serviceAccounts.get",
              "container.serviceAccounts.list",
              "container.services.get",
              "container.services.getStatus",
              "container.services.list",
              "container.statefulSets.get",
              "container.statefulSets.getScale",
              "container.statefulSets.getStatus",
              "container.statefulSets.list",
              "container.storageClasses.get",
              "container.storageClasses.list",
              "container.storageStates.get",
              "container.storageStates.getStatus",
              "container.storageStates.list",
              "container.storageVersionMigrations.get",
              "container.storageVersionMigrations.getStatus",
              "container.storageVersionMigrations.list",
              "container.thirdPartyObjects.get",
              "container.thirdPartyObjects.list",
              "container.thirdPartyResources.get",
              "container.thirdPartyResources.list",
              "container.tokenReviews.create",
              "container.updateInfos.get",
              "container.updateInfos.list",
              "container.validatingWebhookConfigurations.get",
              "container.validatingWebhookConfigurations.list",
              "container.volumeAttachments.get",
              "container.volumeAttachments.getStatus",
              "container.volumeAttachments.list",
              "container.volumeSnapshotClasses.get",
              "container.volumeSnapshotClasses.list",
              "container.volumeSnapshotContents.get",
              "container.volumeSnapshotContents.getStatus",
              "container.volumeSnapshotContents.list",
              "container.volumeSnapshots.get",
              "container.volumeSnapshots.list",
              "dataproc.autoscalingPolicies.get",
              "dataproc.autoscalingPolicies.list",
              "dataproc.autoscalingPolicies.use",
              "dataproc.clusters.get",
              "dataproc.clusters.list",
              "dataproc.clusters.use",
              "dataproc.jobs.cancel",
              "dataproc.jobs.create",
              "dataproc.jobs.delete",
              "dataproc.jobs.get",
              "dataproc.jobs.list",
              "dataproc.jobs.update",
              "dataproc.operations.cancel",
              "dataproc.operations.delete",
              "dataproc.operations.get",
              "dataproc.operations.list",
              "dataproc.workflowTemplates.create",
              "dataproc.workflowTemplates.delete",
              "dataproc.workflowTemplates.get",
              "dataproc.workflowTemplates.instantiate",
              "dataproc.workflowTemplates.instantiateInline",
              "dataproc.workflowTemplates.list",
              "dataproc.workflowTemplates.update",
              "eventarc.locations.get",
              "eventarc.locations.list",
              "eventarc.operations.cancel",
              "eventarc.operations.delete",
              "eventarc.operations.get",
              "eventarc.operations.list",
              "eventarc.triggers.create",
              "eventarc.triggers.delete",
              "eventarc.triggers.get",
              "eventarc.triggers.getIamPolicy",
              "eventarc.triggers.list",
              "eventarc.triggers.undelete",
              "eventarc.triggers.update",
              "iam.serviceAccounts.getIamPolicy",
              "iam.serviceAccounts.setIamPolicy",
              "monitoring.alertPolicies.get",
              "monitoring.alertPolicies.list",
              "monitoring.dashboards.get",
              "monitoring.dashboards.list",
              "monitoring.groups.get",
              "monitoring.groups.list",
              "monitoring.metricDescriptors.get",
              "monitoring.metricDescriptors.list",
              "monitoring.monitoredResourceDescriptors.get",
              "monitoring.monitoredResourceDescriptors.list",
              "monitoring.notificationChannelDescriptors.get",
              "monitoring.notificationChannelDescriptors.list",
              "monitoring.notificationChannels.get",
              "monitoring.notificationChannels.list",
              "monitoring.publicWidgets.get",
              "monitoring.publicWidgets.list",
              "monitoring.services.get",
              "monitoring.services.list",
              "monitoring.slos.get",
              "monitoring.slos.list",
              "monitoring.timeSeries.list",
              "monitoring.uptimeCheckConfigs.get",
              "monitoring.uptimeCheckConfigs.list",
              "opsconfigmonitoring.resourceMetadata.list",
              "recommender.locations.get",
              "recommender.locations.list",
              "remotebuildexecution.blobs.get",
              "resourcemanager.projects.get",
              "resourcemanager.projects.getIamPolicy",
              "run.configurations.get",
              "run.configurations.list",
              "run.locations.list",
              "run.revisions.delete",
              "run.revisions.get",
              "run.revisions.list",
              "run.routes.get",
              "run.routes.list",
              "run.services.create",
              "run.services.delete",
              "run.services.get",
              "run.services.getIamPolicy",
              "run.services.list",
              "run.services.update",
              "secretmanager.locations.get",
              "secretmanager.locations.list",
              "secretmanager.secrets.create",
              "secretmanager.secrets.delete",
              "secretmanager.secrets.get",
              "secretmanager.secrets.getIamPolicy",
              "secretmanager.secrets.list",
              "secretmanager.secrets.setIamPolicy",
              "secretmanager.secrets.update",
              "secretmanager.versions.access",
              "secretmanager.versions.add",
              "secretmanager.versions.destroy",
              "secretmanager.versions.disable",
              "secretmanager.versions.enable",
              "secretmanager.versions.get",
              "secretmanager.versions.list",
              "serviceusage.quotas.get",
              "serviceusage.services.get",
              "serviceusage.services.list",
              "stackdriver.projects.get",
              "storage.buckets.get",
              "storage.buckets.getIamPolicy",
              "storage.buckets.list",
              "storage.buckets.listTagBindings",
              "storage.multipartUploads.abort",
              "storage.multipartUploads.create",
              "storage.multipartUploads.list",
              "storage.multipartUploads.listParts",
              "storage.objects.create",
              "storage.objects.delete",
              "storage.objects.list"
            ],
            "project": "idea-ind-data-ai-dev",
            "role_id": "Dataproc_Developer_tf1",
            "stage": "GA",
            "title": "ABCR_Developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_custom_role",
      "name": "my-custom-role2",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "deleted": false,
            "description": "A description",
            "id": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf2",
            "name": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf2",
            "permissions": [
              "aiplatform.annotationSpecs.create",
              "aiplatform.annotationSpecs.delete",
              "aiplatform.annotationSpecs.get",
              "aiplatform.annotationSpecs.list",
              "aiplatform.annotationSpecs.update",
              "aiplatform.annotations.create",
              "aiplatform.annotations.delete",
              "aiplatform.annotations.get",
              "aiplatform.annotations.list",
              "aiplatform.annotations.update",
              "aiplatform.artifacts.create",
              "aiplatform.artifacts.delete",
              "aiplatform.artifacts.get",
              "aiplatform.artifacts.list",
              "aiplatform.artifacts.update",
              "aiplatform.batchPredictionJobs.cancel",
              "aiplatform.batchPredictionJobs.create",
              "aiplatform.batchPredictionJobs.delete",
              "aiplatform.batchPredictionJobs.get",
              "aiplatform.batchPredictionJobs.list",
              "aiplatform.contexts.addContextArtifactsAndExecutions",
              "aiplatform.contexts.addContextChildren",
              "aiplatform.contexts.create",
              "aiplatform.contexts.delete",
              "aiplatform.contexts.get",
              "aiplatform.contexts.list",
              "aiplatform.contexts.queryContextLineageSubgraph",
              "aiplatform.contexts.update",
              "aiplatform.customJobs.cancel",
              "aiplatform.customJobs.create",
              "aiplatform.customJobs.delete",
              "aiplatform.customJobs.get",
              "aiplatform.customJobs.list",
              "aiplatform.dataItems.create",
              "aiplatform.dataItems.delete",
              "aiplatform.dataItems.get",
              "aiplatform.dataItems.list",
              "aiplatform.dataItems.update",
              "aiplatform.dataLabelingJobs.cancel",
              "aiplatform.dataLabelingJobs.create",
              "aiplatform.dataLabelingJobs.delete",
              "aiplatform.dataLabelingJobs.get",
              "aiplatform.dataLabelingJobs.list",
              "aiplatform.datasets.create",
              "aiplatform.datasets.delete",
              "aiplatform.datasets.export",
              "aiplatform.datasets.get",
              "aiplatform.datasets.import",
              "aiplatform.datasets.list",
              "aiplatform.datasets.update",
              "aiplatform.edgeDeploymentJobs.create",
              "aiplatform.edgeDeploymentJobs.delete",
              "aiplatform.edgeDeploymentJobs.get",
              "aiplatform.edgeDeploymentJobs.list",
              "aiplatform.edgeDeviceDebugInfo.get",
              "aiplatform.edgeDevices.create",
              "aiplatform.edgeDevices.delete",
              "aiplatform.edgeDevices.get",
              "aiplatform.edgeDevices.list",
              "aiplatform.edgeDevices.update",
              "aiplatform.endpoints.create",
              "aiplatform.endpoints.delete",
              "aiplatform.endpoints.deploy",
              "aiplatform.endpoints.explain",
              "aiplatform.endpoints.get",
              "aiplatform.endpoints.list",
              "aiplatform.endpoints.predict",
              "aiplatform.endpoints.undeploy",
              "aiplatform.endpoints.update",
              "aiplatform.entityTypes.create",
              "aiplatform.entityTypes.delete",
              "aiplatform.entityTypes.exportFeatureValues",
              "aiplatform.entityTypes.get",
              "aiplatform.entityTypes.importFeatureValues",
              "aiplatform.entityTypes.list",
              "aiplatform.entityTypes.readFeatureValues",
              "aiplatform.entityTypes.streamingReadFeatureValues",
              "aiplatform.entityTypes.update",
              "aiplatform.entityTypes.writeFeatureValues",
              "aiplatform.executions.addExecutionEvents",
              "aiplatform.executions.create",
              "aiplatform.executions.delete",
              "aiplatform.executions.get",
              "aiplatform.executions.list",
              "aiplatform.executions.queryExecutionInputsAndOutputs",
              "aiplatform.executions.update",
              "aiplatform.features.create",
              "aiplatform.features.delete",
              "aiplatform.features.get",
              "aiplatform.features.list",
              "aiplatform.features.update",
              "aiplatform.featurestores.batchReadFeatureValues",
              "aiplatform.featurestores.create",
              "aiplatform.featurestores.delete",
              "aiplatform.featurestores.exportFeatures",
              "aiplatform.featurestores.get",
              "aiplatform.featurestores.importFeatures",
              "aiplatform.featurestores.list",
              "aiplatform.featurestores.readFeatures",
              "aiplatform.featurestores.update",
              "aiplatform.featurestores.writeFeatures",
              "aiplatform.humanInTheLoops.create",
              "aiplatform.humanInTheLoops.delete",
              "aiplatform.humanInTheLoops.get",
              "aiplatform.humanInTheLoops.list",
              "aiplatform.humanInTheLoops.send",
              "aiplatform.humanInTheLoops.update",
              "aiplatform.hyperparameterTuningJobs.cancel",
              "aiplatform.hyperparameterTuningJobs.create",
              "aiplatform.hyperparameterTuningJobs.delete",
              "aiplatform.hyperparameterTuningJobs.get",
              "aiplatform.hyperparameterTuningJobs.list",
              "aiplatform.indexEndpoints.create",
              "aiplatform.indexEndpoints.delete",
              "aiplatform.indexEndpoints.deploy",
              "aiplatform.indexEndpoints.get",
              "aiplatform.indexEndpoints.list",
              "aiplatform.indexEndpoints.undeploy",
              "aiplatform.indexEndpoints.update",
              "aiplatform.indexes.create",
              "aiplatform.indexes.delete",
              "aiplatform.indexes.get",
              "aiplatform.indexes.list",
              "aiplatform.indexes.update",
              "aiplatform.locations.get",
              "aiplatform.locations.list",
              "aiplatform.metadataSchemas.create",
              "aiplatform.metadataSchemas.delete",
              "aiplatform.metadataSchemas.get",
              "aiplatform.metadataSchemas.list",
              "aiplatform.metadataStores.create",
              "aiplatform.metadataStores.delete",
              "aiplatform.metadataStores.get",
              "aiplatform.metadataStores.list",
              "aiplatform.modelDeploymentMonitoringJobs.create",
              "aiplatform.modelDeploymentMonitoringJobs.delete",
              "aiplatform.modelDeploymentMonitoringJobs.get",
              "aiplatform.modelDeploymentMonitoringJobs.list",
              "aiplatform.modelDeploymentMonitoringJobs.pause",
              "aiplatform.modelDeploymentMonitoringJobs.resume",
              "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
              "aiplatform.modelDeploymentMonitoringJobs.update",
              "aiplatform.modelEvaluationSlices.get",
              "aiplatform.modelEvaluationSlices.list",
              "aiplatform.modelEvaluations.exportEvaluatedDataItems",
              "aiplatform.modelEvaluations.get",
              "aiplatform.modelEvaluations.list",
              "aiplatform.models.delete",
              "aiplatform.models.export",
              "aiplatform.models.get",
              "aiplatform.models.list",
              "aiplatform.models.update",
              "aiplatform.models.upload",
              "aiplatform.nasJobs.cancel",
              "aiplatform.nasJobs.create",
              "aiplatform.nasJobs.delete",
              "aiplatform.nasJobs.get",
              "aiplatform.nasJobs.list",
              "aiplatform.operations.list",
              "aiplatform.pipelineJobs.cancel",
              "aiplatform.pipelineJobs.create",
              "aiplatform.pipelineJobs.delete",
              "aiplatform.pipelineJobs.get",
              "aiplatform.pipelineJobs.list",
              "aiplatform.specialistPools.create",
              "aiplatform.specialistPools.delete",
              "aiplatform.specialistPools.get",
              "aiplatform.specialistPools.list",
              "aiplatform.specialistPools.update",
              "aiplatform.studies.create",
              "aiplatform.studies.delete",
              "aiplatform.studies.get",
              "aiplatform.studies.list",
              "aiplatform.studies.update",
              "aiplatform.tensorboardExperiments.create",
              "aiplatform.tensorboardExperiments.delete",
              "aiplatform.tensorboardExperiments.get",
              "aiplatform.tensorboardExperiments.list",
              "aiplatform.tensorboardExperiments.update",
              "aiplatform.tensorboardExperiments.write",
              "aiplatform.tensorboardRuns.batchCreate",
              "aiplatform.tensorboardRuns.create",
              "aiplatform.tensorboardRuns.delete",
              "aiplatform.tensorboardRuns.get",
              "aiplatform.tensorboardRuns.list",
              "aiplatform.tensorboardRuns.update",
              "aiplatform.tensorboardRuns.write",
              "aiplatform.tensorboardTimeSeries.batchCreate",
              "aiplatform.tensorboardTimeSeries.batchRead",
              "aiplatform.tensorboardTimeSeries.create",
              "aiplatform.tensorboardTimeSeries.delete",
              "aiplatform.tensorboardTimeSeries.get",
              "aiplatform.tensorboardTimeSeries.list",
              "aiplatform.tensorboardTimeSeries.read",
              "aiplatform.tensorboardTimeSeries.update",
              "aiplatform.tensorboards.create",
              "aiplatform.tensorboards.delete",
              "aiplatform.tensorboards.get",
              "aiplatform.tensorboards.list",
              "aiplatform.tensorboards.update",
              "aiplatform.trainingPipelines.cancel",
              "aiplatform.trainingPipelines.create",
              "aiplatform.trainingPipelines.delete",
              "aiplatform.trainingPipelines.get",
              "aiplatform.trainingPipelines.list",
              "aiplatform.trials.create",
              "aiplatform.trials.delete",
              "aiplatform.trials.get",
              "aiplatform.trials.list",
              "aiplatform.trials.update",
              "apigee.apiproductattributes.get",
              "apigee.apiproductattributes.list",
              "apigee.apiproducts.get",
              "apigee.apiproducts.list",
              "apigee.appkeys.get",
              "apigee.apps.get",
              "apigee.apps.list",
              "apigee.archivedeployments.download",
              "apigee.archivedeployments.get",
              "apigee.archivedeployments.list",
              "apigee.caches.list",
              "apigee.canaryevaluations.get",
              "apigee.datacollectors.get",
              "apigee.datacollectors.list",
              "apigee.datastores.get",
              "apigee.datastores.list",
              "apigee.deployments.get",
              "apigee.deployments.list",
              "apigee.developerappattributes.get",
              "apigee.developerappattributes.list",
              "apigee.developerapps.get",
              "apigee.developerapps.list",
              "apigee.developerattributes.get",
              "apigee.developerattributes.list",
              "apigee.developerbalances.get",
              "apigee.developermonetizationconfigs.get",
              "apigee.developers.get",
              "apigee.developers.list",
              "apigee.developersubscriptions.get",
              "apigee.developersubscriptions.list",
              "apigee.envgroupattachments.get",
              "apigee.envgroupattachments.list",
              "apigee.envgroups.get",
              "apigee.envgroups.list",
              "apigee.environments.get",
              "apigee.environments.getDataLocation",
              "apigee.environments.getIamPolicy",
              "apigee.environments.getStats",
              "apigee.environments.list",
              "apigee.exports.get",
              "apigee.exports.list",
              "apigee.flowhooks.getSharedFlow",
              "apigee.flowhooks.list",
              "apigee.hostqueries.get",
              "apigee.hostqueries.list",
              "apigee.hostsecurityreports.get",
              "apigee.hostsecurityreports.list",
              "apigee.hoststats.get",
              "apigee.ingressconfigs.get",
              "apigee.instanceattachments.get",
              "apigee.instanceattachments.list",
              "apigee.instances.get",
              "apigee.instances.list",
              "apigee.keystorealiases.get",
              "apigee.keystorealiases.list",
              "apigee.keystores.get",
              "apigee.keystores.list",
              "apigee.keyvaluemaps.list",
              "apigee.maskconfigs.get",
              "apigee.operations.get",
              "apigee.operations.list",
              "apigee.organizations.get",
              "apigee.organizations.list",
              "apigee.portals.get",
              "apigee.portals.list",
              "apigee.proxies.get",
              "apigee.proxies.list",
              "apigee.proxyrevisions.get",
              "apigee.proxyrevisions.list",
              "apigee.queries.get",
              "apigee.queries.list",
              "apigee.rateplans.get",
              "apigee.rateplans.list",
              "apigee.references.get",
              "apigee.references.list",
              "apigee.reports.get",
              "apigee.reports.list",
              "apigee.resourcefiles.get",
              "apigee.resourcefiles.list",
              "apigee.runtimeconfigs.get",
              "apigee.securityreports.get",
              "apigee.securityreports.list",
              "apigee.sharedflowrevisions.get",
              "apigee.sharedflowrevisions.list",
              "apigee.sharedflows.get",
              "apigee.sharedflows.list",
              "apigee.targetservers.get",
              "apigee.targetservers.list",
              "apigee.tracesessions.get",
              "apigee.tracesessions.list",
              "bigquery.bireservations.get",
              "bigquery.capacityCommitments.get",
              "bigquery.capacityCommitments.list",
              "bigquery.config.get",
              "bigquery.datasets.create",
              "bigquery.datasets.get",
              "bigquery.datasets.getIamPolicy",
              "bigquery.datasets.updateTag",
              "bigquery.jobs.create",
              "bigquery.jobs.list",
              "bigquery.models.create",
              "bigquery.models.delete",
              "bigquery.models.export",
              "bigquery.models.getData",
              "bigquery.models.getMetadata",
              "bigquery.models.list",
              "bigquery.models.updateData",
              "bigquery.models.updateMetadata",
              "bigquery.models.updateTag",
              "bigquery.readsessions.create",
              "bigquery.readsessions.getData",
              "bigquery.readsessions.update",
              "bigquery.reservationAssignments.list",
              "bigquery.reservationAssignments.search",
              "bigquery.reservations.get",
              "bigquery.reservations.list",
              "bigquery.routines.create",
              "bigquery.routines.delete",
              "bigquery.routines.get",
              "bigquery.routines.list",
              "bigquery.routines.update",
              "bigquery.routines.updateTag",
              "bigquery.savedqueries.get",
              "bigquery.savedqueries.list",
              "bigquery.tables.create",
              "bigquery.tables.createSnapshot",
              "bigquery.tables.delete",
              "bigquery.tables.export",
              "bigquery.tables.get",
              "bigquery.tables.getData",
              "bigquery.tables.getIamPolicy",
              "bigquery.tables.list",
              "bigquery.tables.restoreSnapshot",
              "bigquery.tables.update",
              "bigquery.tables.updateData",
              "bigquery.tables.updateTag",
              "bigquery.transfers.get",
              "cloudnotifications.activities.list",
              "compute.instances.get",
              "compute.instances.getScreenshot",
              "compute.instances.list",
              "container.apiServices.get",
              "container.apiServices.getStatus",
              "container.apiServices.list",
              "container.auditSinks.get",
              "container.auditSinks.list",
              "container.backendConfigs.get",
              "container.backendConfigs.list",
              "container.bindings.get",
              "container.bindings.list",
              "container.certificateSigningRequests.get",
              "container.certificateSigningRequests.getStatus",
              "container.certificateSigningRequests.list",
              "container.clusterRoleBindings.get",
              "container.clusterRoleBindings.list",
              "container.clusterRoles.get",
              "container.clusterRoles.list",
              "container.clusters.get",
              "container.clusters.list",
              "container.componentStatuses.get",
              "container.componentStatuses.list",
              "container.configMaps.get",
              "container.configMaps.list",
              "container.controllerRevisions.get",
              "container.controllerRevisions.list",
              "container.cronJobs.get",
              "container.cronJobs.getStatus",
              "container.cronJobs.list",
              "container.csiDrivers.get",
              "container.csiDrivers.list",
              "container.csiNodeInfos.get",
              "container.csiNodeInfos.list",
              "container.csiNodes.get",
              "container.csiNodes.list",
              "container.customResourceDefinitions.get",
              "container.customResourceDefinitions.getStatus",
              "container.customResourceDefinitions.list",
              "container.daemonSets.get",
              "container.daemonSets.getStatus",
              "container.daemonSets.list",
              "container.deployments.get",
              "container.deployments.getScale",
              "container.deployments.getStatus",
              "container.deployments.list",
              "container.endpointSlices.get",
              "container.endpointSlices.list",
              "container.endpoints.get",
              "container.endpoints.list",
              "container.events.get",
              "container.events.list",
              "container.frontendConfigs.get",
              "container.frontendConfigs.list",
              "container.horizontalPodAutoscalers.get",
              "container.horizontalPodAutoscalers.getStatus",
              "container.horizontalPodAutoscalers.list",
              "container.ingresses.get",
              "container.ingresses.getStatus",
              "container.ingresses.list",
              "container.initializerConfigurations.get",
              "container.initializerConfigurations.list",
              "container.jobs.get",
              "container.jobs.getStatus",
              "container.jobs.list",
              "container.leases.get",
              "container.leases.list",
              "container.limitRanges.get",
              "container.limitRanges.list",
              "container.managedCertificates.get",
              "container.managedCertificates.list",
              "container.mutatingWebhookConfigurations.get",
              "container.mutatingWebhookConfigurations.list",
              "container.namespaces.get",
              "container.namespaces.getStatus",
              "container.namespaces.list",
              "container.networkPolicies.get",
              "container.networkPolicies.list",
              "container.nodes.get",
              "container.nodes.getStatus",
              "container.nodes.list",
              "container.operations.get",
              "container.operations.list",
              "container.persistentVolumeClaims.get",
              "container.persistentVolumeClaims.getStatus",
              "container.persistentVolumeClaims.list",
              "container.persistentVolumes.get",
              "container.persistentVolumes.getStatus",
              "container.persistentVolumes.list",
              "container.petSets.get",
              "container.petSets.list",
              "container.podDisruptionBudgets.get",
              "container.podDisruptionBudgets.getStatus",
              "container.podDisruptionBudgets.list",
              "container.podPresets.get",
              "container.podPresets.list",
              "container.podSecurityPolicies.get",
              "container.podSecurityPolicies.list",
              "container.podTemplates.get",
              "container.podTemplates.list",
              "container.pods.get",
              "container.pods.getStatus",
              "container.pods.list",
              "container.priorityClasses.get",
              "container.priorityClasses.list",
              "container.replicaSets.get",
              "container.replicaSets.getScale",
              "container.replicaSets.getStatus",
              "container.replicaSets.list",
              "container.replicationControllers.get",
              "container.replicationControllers.getScale",
              "container.replicationControllers.getStatus",
              "container.replicationControllers.list",
              "container.resourceQuotas.get",
              "container.resourceQuotas.getStatus",
              "container.resourceQuotas.list",
              "container.roleBindings.get",
              "container.roleBindings.list",
              "container.roles.get",
              "container.roles.list",
              "container.runtimeClasses.get",
              "container.runtimeClasses.list",
              "container.scheduledJobs.get",
              "container.scheduledJobs.list",
              "container.serviceAccounts.get",
              "container.serviceAccounts.list",
              "container.services.get",
              "container.services.getStatus",
              "container.services.list",
              "container.statefulSets.get",
              "container.statefulSets.getScale",
              "container.statefulSets.getStatus",
              "container.statefulSets.list",
              "container.storageClasses.get",
              "container.storageClasses.list",
              "container.storageStates.get",
              "container.storageStates.getStatus",
              "container.storageStates.list",
              "container.storageVersionMigrations.get",
              "container.storageVersionMigrations.getStatus",
              "container.storageVersionMigrations.list",
              "container.thirdPartyObjects.get",
              "container.thirdPartyObjects.list",
              "container.thirdPartyResources.get",
              "container.thirdPartyResources.list",
              "container.tokenReviews.create",
              "container.updateInfos.get",
              "container.updateInfos.list",
              "container.validatingWebhookConfigurations.get",
              "container.validatingWebhookConfigurations.list",
              "container.volumeAttachments.get",
              "container.volumeAttachments.getStatus",
              "container.volumeAttachments.list",
              "container.volumeSnapshotClasses.get",
              "container.volumeSnapshotClasses.list",
              "container.volumeSnapshotContents.get",
              "container.volumeSnapshotContents.getStatus",
              "container.volumeSnapshotContents.list",
              "container.volumeSnapshots.get",
              "container.volumeSnapshots.list",
              "iam.serviceAccounts.actAs",
              "iam.serviceAccounts.get",
              "iam.serviceAccounts.list",
              "monitoring.alertPolicies.get",
              "monitoring.alertPolicies.list",
              "monitoring.dashboards.get",
              "monitoring.dashboards.list",
              "monitoring.groups.get",
              "monitoring.groups.list",
              "monitoring.metricDescriptors.get",
              "monitoring.metricDescriptors.list",
              "monitoring.monitoredResourceDescriptors.get",
              "monitoring.monitoredResourceDescriptors.list",
              "monitoring.notificationChannelDescriptors.get",
              "monitoring.notificationChannelDescriptors.list",
              "monitoring.notificationChannels.get",
              "monitoring.notificationChannels.list",
              "monitoring.publicWidgets.get",
              "monitoring.publicWidgets.list",
              "monitoring.services.get",
              "monitoring.services.list",
              "monitoring.slos.get",
              "monitoring.slos.list",
              "monitoring.timeSeries.list",
              "monitoring.uptimeCheckConfigs.get",
              "monitoring.uptimeCheckConfigs.list",
              "opsconfigmonitoring.resourceMetadata.list",
              "resourcemanager.projects.get",
              "resourcemanager.projects.getIamPolicy",
              "secretmanager.locations.get",
              "secretmanager.locations.list",
              "secretmanager.secrets.create",
              "secretmanager.secrets.delete",
              "secretmanager.secrets.get",
              "secretmanager.secrets.getIamPolicy",
              "secretmanager.secrets.list",
              "secretmanager.secrets.setIamPolicy",
              "secretmanager.secrets.update",
              "secretmanager.versions.access",
              "secretmanager.versions.add",
              "secretmanager.versions.destroy",
              "secretmanager.versions.disable",
              "secretmanager.versions.enable",
              "secretmanager.versions.get",
              "secretmanager.versions.list",
              "stackdriver.projects.get",
              "storage.buckets.get",
              "storage.buckets.getIamPolicy",
              "storage.buckets.list",
              "storage.buckets.listTagBindings",
              "storage.multipartUploads.abort",
              "storage.multipartUploads.create",
              "storage.multipartUploads.list",
              "storage.multipartUploads.listParts",
              "storage.objects.create",
              "storage.objects.delete",
              "storage.objects.list"
            ],
            "project": "idea-ind-data-ai-dev",
            "role_id": "Dataproc_Developer_tf2",
            "stage": "GA",
            "title": "AIML_developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_custom_role",
      "name": "my-custom-role3",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "deleted": false,
            "description": "A description",
            "id": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf3",
            "name": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf3",
            "permissions": [
              "apigee.apiproductattributes.get",
              "apigee.apiproductattributes.list",
              "apigee.apiproducts.get",
              "apigee.apiproducts.list",
              "apigee.appkeys.get",
              "apigee.apps.get",
              "apigee.apps.list",
              "apigee.archivedeployments.download",
              "apigee.archivedeployments.get",
              "apigee.archivedeployments.list",
              "apigee.caches.list",
              "apigee.canaryevaluations.get",
              "apigee.datacollectors.get",
              "apigee.datacollectors.list",
              "apigee.datastores.get",
              "apigee.datastores.list",
              "apigee.deployments.get",
              "apigee.deployments.list",
              "apigee.developerappattributes.get",
              "apigee.developerappattributes.list",
              "apigee.developerapps.get",
              "apigee.developerapps.list",
              "apigee.developerattributes.get",
              "apigee.developerattributes.list",
              "apigee.developerbalances.get",
              "apigee.developermonetizationconfigs.get",
              "apigee.developers.get",
              "apigee.developers.list",
              "apigee.developersubscriptions.get",
              "apigee.developersubscriptions.list",
              "apigee.envgroupattachments.get",
              "apigee.envgroupattachments.list",
              "apigee.envgroups.get",
              "apigee.envgroups.list",
              "apigee.environments.get",
              "apigee.environments.getDataLocation",
              "apigee.environments.getIamPolicy",
              "apigee.environments.getStats",
              "apigee.environments.list",
              "apigee.exports.get",
              "apigee.exports.list",
              "apigee.flowhooks.getSharedFlow",
              "apigee.flowhooks.list",
              "apigee.hostqueries.get",
              "apigee.hostqueries.list",
              "apigee.hostsecurityreports.get",
              "apigee.hostsecurityreports.list",
              "apigee.hoststats.get",
              "apigee.ingressconfigs.get",
              "apigee.instanceattachments.get",
              "apigee.instanceattachments.list",
              "apigee.instances.get",
              "apigee.instances.list",
              "apigee.keystorealiases.get",
              "apigee.keystorealiases.list",
              "apigee.keystores.get",
              "apigee.keystores.list",
              "apigee.keyvaluemaps.list",
              "apigee.maskconfigs.get",
              "apigee.operations.get",
              "apigee.operations.list",
              "apigee.organizations.get",
              "apigee.organizations.list",
              "apigee.portals.get",
              "apigee.portals.list",
              "apigee.proxies.get",
              "apigee.proxies.list",
              "apigee.proxyrevisions.get",
              "apigee.proxyrevisions.list",
              "apigee.queries.get",
              "apigee.queries.list",
              "apigee.rateplans.get",
              "apigee.rateplans.list",
              "apigee.references.get",
              "apigee.references.list",
              "apigee.reports.get",
              "apigee.reports.list",
              "apigee.resourcefiles.get",
              "apigee.resourcefiles.list",
              "apigee.runtimeconfigs.get",
              "apigee.securityreports.get",
              "apigee.securityreports.list",
              "apigee.sharedflowrevisions.get",
              "apigee.sharedflowrevisions.list",
              "apigee.sharedflows.get",
              "apigee.sharedflows.list",
              "apigee.targetservers.get",
              "apigee.targetservers.list",
              "apigee.tracesessions.get",
              "apigee.tracesessions.list",
              "bigquery.bireservations.get",
              "bigquery.capacityCommitments.get",
              "bigquery.capacityCommitments.list",
              "bigquery.config.get",
              "bigquery.datasets.create",
              "bigquery.datasets.get",
              "bigquery.datasets.getIamPolicy",
              "bigquery.datasets.updateTag",
              "bigquery.jobs.create",
              "bigquery.jobs.list",
              "bigquery.models.create",
              "bigquery.models.delete",
              "bigquery.models.export",
              "bigquery.models.getData",
              "bigquery.models.getMetadata",
              "bigquery.models.list",
              "bigquery.models.updateData",
              "bigquery.models.updateMetadata",
              "bigquery.models.updateTag",
              "bigquery.readsessions.create",
              "bigquery.readsessions.getData",
              "bigquery.readsessions.update",
              "bigquery.reservationAssignments.list",
              "bigquery.reservationAssignments.search",
              "bigquery.reservations.get",
              "bigquery.reservations.list",
              "bigquery.routines.create",
              "bigquery.routines.delete",
              "bigquery.routines.get",
              "bigquery.routines.list",
              "bigquery.routines.update",
              "bigquery.routines.updateTag",
              "bigquery.savedqueries.get",
              "bigquery.savedqueries.list",
              "bigquery.tables.create",
              "bigquery.tables.createSnapshot",
              "bigquery.tables.delete",
              "bigquery.tables.export",
              "bigquery.tables.get",
              "bigquery.tables.getData",
              "bigquery.tables.getIamPolicy",
              "bigquery.tables.list",
              "bigquery.tables.restoreSnapshot",
              "bigquery.tables.update",
              "bigquery.tables.updateData",
              "bigquery.tables.updateTag",
              "bigquery.transfers.get",
              "cloudnotifications.activities.list",
              "compute.machineTypes.get",
              "compute.machineTypes.list",
              "compute.networks.get",
              "compute.networks.list",
              "compute.projects.get",
              "compute.regions.get",
              "compute.regions.list",
              "compute.zones.get",
              "compute.zones.list",
              "container.apiServices.get",
              "container.apiServices.getStatus",
              "container.apiServices.list",
              "container.auditSinks.get",
              "container.auditSinks.list",
              "container.backendConfigs.get",
              "container.backendConfigs.list",
              "container.bindings.get",
              "container.bindings.list",
              "container.certificateSigningRequests.get",
              "container.certificateSigningRequests.getStatus",
              "container.certificateSigningRequests.list",
              "container.clusterRoleBindings.get",
              "container.clusterRoleBindings.list",
              "container.clusterRoles.get",
              "container.clusterRoles.list",
              "container.clusters.get",
              "container.clusters.list",
              "container.componentStatuses.get",
              "container.componentStatuses.list",
              "container.configMaps.get",
              "container.configMaps.list",
              "container.controllerRevisions.get",
              "container.controllerRevisions.list",
              "container.cronJobs.get",
              "container.cronJobs.getStatus",
              "container.cronJobs.list",
              "container.csiDrivers.get",
              "container.csiDrivers.list",
              "container.csiNodeInfos.get",
              "container.csiNodeInfos.list",
              "container.csiNodes.get",
              "container.csiNodes.list",
              "container.customResourceDefinitions.get",
              "container.customResourceDefinitions.getStatus",
              "container.customResourceDefinitions.list",
              "container.daemonSets.get",
              "container.daemonSets.getStatus",
              "container.daemonSets.list",
              "container.deployments.get",
              "container.deployments.getScale",
              "container.deployments.getStatus",
              "container.deployments.list",
              "container.endpointSlices.get",
              "container.endpointSlices.list",
              "container.endpoints.get",
              "container.endpoints.list",
              "container.events.get",
              "container.events.list",
              "container.frontendConfigs.get",
              "container.frontendConfigs.list",
              "container.horizontalPodAutoscalers.get",
              "container.horizontalPodAutoscalers.getStatus",
              "container.horizontalPodAutoscalers.list",
              "container.ingresses.get",
              "container.ingresses.getStatus",
              "container.ingresses.list",
              "container.initializerConfigurations.get",
              "container.initializerConfigurations.list",
              "container.jobs.get",
              "container.jobs.getStatus",
              "container.jobs.list",
              "container.leases.get",
              "container.leases.list",
              "container.limitRanges.get",
              "container.limitRanges.list",
              "container.managedCertificates.get",
              "container.managedCertificates.list",
              "container.mutatingWebhookConfigurations.get",
              "container.mutatingWebhookConfigurations.list",
              "container.namespaces.get",
              "container.namespaces.getStatus",
              "container.namespaces.list",
              "container.networkPolicies.get",
              "container.networkPolicies.list",
              "container.nodes.get",
              "container.nodes.getStatus",
              "container.nodes.list",
              "container.operations.get",
              "container.operations.list",
              "container.persistentVolumeClaims.get",
              "container.persistentVolumeClaims.getStatus",
              "container.persistentVolumeClaims.list",
              "container.persistentVolumes.get",
              "container.persistentVolumes.getStatus",
              "container.persistentVolumes.list",
              "container.petSets.get",
              "container.petSets.list",
              "container.podDisruptionBudgets.get",
              "container.podDisruptionBudgets.getStatus",
              "container.podDisruptionBudgets.list",
              "container.podPresets.get",
              "container.podPresets.list",
              "container.podSecurityPolicies.get",
              "container.podSecurityPolicies.list",
              "container.podTemplates.get",
              "container.podTemplates.list",
              "container.pods.get",
              "container.pods.getStatus",
              "container.pods.list",
              "container.priorityClasses.get",
              "container.priorityClasses.list",
              "container.replicaSets.get",
              "container.replicaSets.getScale",
              "container.replicaSets.getStatus",
              "container.replicaSets.list",
              "container.replicationControllers.get",
              "container.replicationControllers.getScale",
              "container.replicationControllers.getStatus",
              "container.replicationControllers.list",
              "container.resourceQuotas.get",
              "container.resourceQuotas.getStatus",
              "container.resourceQuotas.list",
              "container.roleBindings.get",
              "container.roleBindings.list",
              "container.roles.get",
              "container.roles.list",
              "container.runtimeClasses.get",
              "container.runtimeClasses.list",
              "container.scheduledJobs.get",
              "container.scheduledJobs.list",
              "container.serviceAccounts.get",
              "container.serviceAccounts.list",
              "container.services.get",
              "container.services.getStatus",
              "container.services.list",
              "container.statefulSets.get",
              "container.statefulSets.getScale",
              "container.statefulSets.getStatus",
              "container.statefulSets.list",
              "container.storageClasses.get",
              "container.storageClasses.list",
              "container.storageStates.get",
              "container.storageStates.getStatus",
              "container.storageStates.list",
              "container.storageVersionMigrations.get",
              "container.storageVersionMigrations.getStatus",
              "container.storageVersionMigrations.list",
              "container.thirdPartyObjects.get",
              "container.thirdPartyObjects.list",
              "container.thirdPartyResources.get",
              "container.thirdPartyResources.list",
              "container.tokenReviews.create",
              "container.updateInfos.get",
              "container.updateInfos.list",
              "container.validatingWebhookConfigurations.get",
              "container.validatingWebhookConfigurations.list",
              "container.volumeAttachments.get",
              "container.volumeAttachments.getStatus",
              "container.volumeAttachments.list",
              "container.volumeSnapshotClasses.get",
              "container.volumeSnapshotClasses.list",
              "container.volumeSnapshotContents.get",
              "container.volumeSnapshotContents.getStatus",
              "container.volumeSnapshotContents.list",
              "container.volumeSnapshots.get",
              "container.volumeSnapshots.list",
              "dataflow.jobs.cancel",
              "dataflow.jobs.create",
              "dataflow.jobs.get",
              "dataflow.jobs.list",
              "dataflow.jobs.snapshot",
              "dataflow.jobs.updateContents",
              "dataflow.messages.list",
              "dataflow.metrics.get",
              "dataflow.snapshots.delete",
              "dataflow.snapshots.get",
              "dataflow.snapshots.list",
              "datafusion.instances.get",
              "datafusion.instances.getIamPolicy",
              "datafusion.instances.list",
              "datafusion.locations.get",
              "datafusion.locations.list",
              "datafusion.operations.cancel",
              "datafusion.operations.get",
              "datafusion.operations.list",
              "dataproc.autoscalingPolicies.get",
              "dataproc.autoscalingPolicies.list",
              "dataproc.autoscalingPolicies.use",
              "dataproc.clusters.get",
              "dataproc.clusters.list",
              "dataproc.clusters.use",
              "dataproc.jobs.cancel",
              "dataproc.jobs.create",
              "dataproc.jobs.delete",
              "dataproc.jobs.get",
              "dataproc.jobs.list",
              "dataproc.jobs.update",
              "dataproc.operations.cancel",
              "dataproc.operations.delete",
              "dataproc.operations.get",
              "dataproc.operations.list",
              "dataproc.workflowTemplates.create",
              "dataproc.workflowTemplates.delete",
              "dataproc.workflowTemplates.get",
              "dataproc.workflowTemplates.instantiate",
              "dataproc.workflowTemplates.instantiateInline",
              "dataproc.workflowTemplates.list",
              "dataproc.workflowTemplates.update",
              "monitoring.alertPolicies.get",
              "monitoring.alertPolicies.list",
              "monitoring.dashboards.get",
              "monitoring.dashboards.list",
              "monitoring.groups.get",
              "monitoring.groups.list",
              "monitoring.metricDescriptors.get",
              "monitoring.metricDescriptors.list",
              "monitoring.monitoredResourceDescriptors.get",
              "monitoring.monitoredResourceDescriptors.list",
              "monitoring.notificationChannelDescriptors.get",
              "monitoring.notificationChannelDescriptors.list",
              "monitoring.notificationChannels.get",
              "monitoring.notificationChannels.list",
              "monitoring.publicWidgets.get",
              "monitoring.publicWidgets.list",
              "monitoring.services.get",
              "monitoring.services.list",
              "monitoring.slos.get",
              "monitoring.slos.list",
              "monitoring.timeSeries.list",
              "monitoring.uptimeCheckConfigs.get",
              "monitoring.uptimeCheckConfigs.list",
              "opsconfigmonitoring.resourceMetadata.list",
              "resourcemanager.projects.get",
              "resourcemanager.projects.getIamPolicy",
              "secretmanager.locations.get",
              "secretmanager.locations.list",
              "secretmanager.secrets.create",
              "secretmanager.secrets.delete",
              "secretmanager.secrets.get",
              "secretmanager.secrets.getIamPolicy",
              "secretmanager.secrets.list",
              "secretmanager.secrets.setIamPolicy",
              "secretmanager.secrets.update",
              "secretmanager.versions.access",
              "secretmanager.versions.add",
              "secretmanager.versions.destroy",
              "secretmanager.versions.disable",
              "secretmanager.versions.enable",
              "secretmanager.versions.get",
              "secretmanager.versions.list",
              "stackdriver.projects.get",
              "storage.buckets.get",
              "storage.buckets.getIamPolicy",
              "storage.buckets.list",
              "storage.buckets.listTagBindings",
              "storage.multipartUploads.abort",
              "storage.multipartUploads.create",
              "storage.multipartUploads.list",
              "storage.multipartUploads.listParts",
              "storage.objects.create",
              "storage.objects.delete",
              "storage.objects.list"
            ],
            "project": "idea-ind-data-ai-dev",
            "role_id": "Dataproc_Developer_tf3",
            "stage": "GA",
            "title": "Migration_Developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_custom_role",
      "name": "my-custom-role4",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "deleted": false,
            "description": "A description",
            "id": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf4",
            "name": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf4",
            "permissions": [
              "apigee.apiproductattributes.get",
              "apigee.apiproductattributes.list",
              "apigee.apiproducts.get",
              "apigee.apiproducts.list",
              "apigee.appkeys.get",
              "apigee.apps.get",
              "apigee.apps.list",
              "apigee.archivedeployments.download",
              "apigee.archivedeployments.get",
              "apigee.archivedeployments.list",
              "apigee.caches.list",
              "apigee.canaryevaluations.get",
              "apigee.datacollectors.get",
              "apigee.datacollectors.list",
              "apigee.datastores.get",
              "apigee.datastores.list",
              "apigee.deployments.get",
              "apigee.deployments.list",
              "apigee.developerappattributes.get",
              "apigee.developerappattributes.list",
              "apigee.developerapps.get",
              "apigee.developerapps.list",
              "apigee.developerattributes.get",
              "apigee.developerattributes.list",
              "apigee.developerbalances.get",
              "apigee.developermonetizationconfigs.get",
              "apigee.developers.get",
              "apigee.developers.list",
              "apigee.developersubscriptions.get",
              "apigee.developersubscriptions.list",
              "apigee.envgroupattachments.get",
              "apigee.envgroupattachments.list",
              "apigee.envgroups.get",
              "apigee.envgroups.list",
              "apigee.environments.get",
              "apigee.environments.getDataLocation",
              "apigee.environments.getIamPolicy",
              "apigee.environments.getStats",
              "apigee.environments.list",
              "apigee.exports.get",
              "apigee.exports.list",
              "apigee.flowhooks.getSharedFlow",
              "apigee.flowhooks.list",
              "apigee.hostqueries.get",
              "apigee.hostqueries.list",
              "apigee.hostsecurityreports.get",
              "apigee.hostsecurityreports.list",
              "apigee.hoststats.get",
              "apigee.ingressconfigs.get",
              "apigee.instanceattachments.get",
              "apigee.instanceattachments.list",
              "apigee.instances.get",
              "apigee.instances.list",
              "apigee.keystorealiases.get",
              "apigee.keystorealiases.list",
              "apigee.keystores.get",
              "apigee.keystores.list",
              "apigee.keyvaluemaps.list",
              "apigee.maskconfigs.get",
              "apigee.operations.get",
              "apigee.operations.list",
              "apigee.organizations.get",
              "apigee.organizations.list",
              "apigee.portals.get",
              "apigee.portals.list",
              "apigee.proxies.get",
              "apigee.proxies.list",
              "apigee.proxyrevisions.get",
              "apigee.proxyrevisions.list",
              "apigee.queries.get",
              "apigee.queries.list",
              "apigee.rateplans.get",
              "apigee.rateplans.list",
              "apigee.references.get",
              "apigee.references.list",
              "apigee.reports.get",
              "apigee.reports.list",
              "apigee.resourcefiles.get",
              "apigee.resourcefiles.list",
              "apigee.runtimeconfigs.get",
              "apigee.securityreports.get",
              "apigee.securityreports.list",
              "apigee.sharedflowrevisions.get",
              "apigee.sharedflowrevisions.list",
              "apigee.sharedflows.get",
              "apigee.sharedflows.list",
              "apigee.targetservers.get",
              "apigee.targetservers.list",
              "apigee.tracesessions.get",
              "apigee.tracesessions.list",
              "cloudnotifications.activities.list",
              "compute.instances.get",
              "compute.instances.getScreenshot",
              "compute.instances.list",
              "container.apiServices.get",
              "container.apiServices.getStatus",
              "container.apiServices.list",
              "container.auditSinks.get",
              "container.auditSinks.list",
              "container.backendConfigs.get",
              "container.backendConfigs.list",
              "container.bindings.get",
              "container.bindings.list",
              "container.certificateSigningRequests.get",
              "container.certificateSigningRequests.getStatus",
              "container.certificateSigningRequests.list",
              "container.clusterRoleBindings.get",
              "container.clusterRoleBindings.list",
              "container.clusterRoles.get",
              "container.clusterRoles.list",
              "container.clusters.get",
              "container.clusters.list",
              "container.componentStatuses.get",
              "container.componentStatuses.list",
              "container.configMaps.get",
              "container.configMaps.list",
              "container.controllerRevisions.get",
              "container.controllerRevisions.list",
              "container.cronJobs.get",
              "container.cronJobs.getStatus",
              "container.cronJobs.list",
              "container.csiDrivers.get",
              "container.csiDrivers.list",
              "container.csiNodeInfos.get",
              "container.csiNodeInfos.list",
              "container.csiNodes.get",
              "container.csiNodes.list",
              "container.customResourceDefinitions.get",
              "container.customResourceDefinitions.getStatus",
              "container.customResourceDefinitions.list",
              "container.daemonSets.get",
              "container.daemonSets.getStatus",
              "container.daemonSets.list",
              "container.deployments.get",
              "container.deployments.getScale",
              "container.deployments.getStatus",
              "container.deployments.list",
              "container.endpointSlices.get",
              "container.endpointSlices.list",
              "container.endpoints.get",
              "container.endpoints.list",
              "container.events.get",
              "container.events.list",
              "container.frontendConfigs.get",
              "container.frontendConfigs.list",
              "container.horizontalPodAutoscalers.get",
              "container.horizontalPodAutoscalers.getStatus",
              "container.horizontalPodAutoscalers.list",
              "container.ingresses.get",
              "container.ingresses.getStatus",
              "container.ingresses.list",
              "container.initializerConfigurations.get",
              "container.initializerConfigurations.list",
              "container.jobs.get",
              "container.jobs.getStatus",
              "container.jobs.list",
              "container.leases.get",
              "container.leases.list",
              "container.limitRanges.get",
              "container.limitRanges.list",
              "container.managedCertificates.get",
              "container.managedCertificates.list",
              "container.mutatingWebhookConfigurations.get",
              "container.mutatingWebhookConfigurations.list",
              "container.namespaces.get",
              "container.namespaces.getStatus",
              "container.namespaces.list",
              "container.networkPolicies.get",
              "container.networkPolicies.list",
              "container.nodes.get",
              "container.nodes.getStatus",
              "container.nodes.list",
              "container.operations.get",
              "container.operations.list",
              "container.persistentVolumeClaims.get",
              "container.persistentVolumeClaims.getStatus",
              "container.persistentVolumeClaims.list",
              "container.persistentVolumes.get",
              "container.persistentVolumes.getStatus",
              "container.persistentVolumes.list",
              "container.petSets.get",
              "container.petSets.list",
              "container.podDisruptionBudgets.get",
              "container.podDisruptionBudgets.getStatus",
              "container.podDisruptionBudgets.list",
              "container.podPresets.get",
              "container.podPresets.list",
              "container.podSecurityPolicies.get",
              "container.podSecurityPolicies.list",
              "container.podTemplates.get",
              "container.podTemplates.list",
              "container.pods.get",
              "container.pods.getStatus",
              "container.pods.list",
              "container.priorityClasses.get",
              "container.priorityClasses.list",
              "container.replicaSets.get",
              "container.replicaSets.getScale",
              "container.replicaSets.getStatus",
              "container.replicaSets.list",
              "container.replicationControllers.get",
              "container.replicationControllers.getScale",
              "container.replicationControllers.getStatus",
              "container.replicationControllers.list",
              "container.resourceQuotas.get",
              "container.resourceQuotas.getStatus",
              "container.resourceQuotas.list",
              "container.roleBindings.get",
              "container.roleBindings.list",
              "container.roles.get",
              "container.roles.list",
              "container.runtimeClasses.get",
              "container.runtimeClasses.list",
              "container.scheduledJobs.get",
              "container.scheduledJobs.list",
              "container.serviceAccounts.get",
              "container.serviceAccounts.list",
              "container.services.get",
              "container.services.getStatus",
              "container.services.list",
              "container.statefulSets.get",
              "container.statefulSets.getScale",
              "container.statefulSets.getStatus",
              "container.statefulSets.list",
              "container.storageClasses.get",
              "container.storageClasses.list",
              "container.storageStates.get",
              "container.storageStates.getStatus",
              "container.storageStates.list",
              "container.storageVersionMigrations.get",
              "container.storageVersionMigrations.getStatus",
              "container.storageVersionMigrations.list",
              "container.thirdPartyObjects.get",
              "container.thirdPartyObjects.list",
              "container.thirdPartyResources.get",
              "container.thirdPartyResources.list",
              "container.tokenReviews.create",
              "container.updateInfos.get",
              "container.updateInfos.list",
              "container.validatingWebhookConfigurations.get",
              "container.validatingWebhookConfigurations.list",
              "container.volumeAttachments.get",
              "container.volumeAttachments.getStatus",
              "container.volumeAttachments.list",
              "container.volumeSnapshotClasses.get",
              "container.volumeSnapshotClasses.list",
              "container.volumeSnapshotContents.get",
              "container.volumeSnapshotContents.getStatus",
              "container.volumeSnapshotContents.list",
              "container.volumeSnapshots.get",
              "container.volumeSnapshots.list",
              "monitoring.alertPolicies.get",
              "monitoring.alertPolicies.list",
              "monitoring.dashboards.get",
              "monitoring.dashboards.list",
              "monitoring.groups.get",
              "monitoring.groups.list",
              "monitoring.metricDescriptors.get",
              "monitoring.metricDescriptors.list",
              "monitoring.monitoredResourceDescriptors.get",
              "monitoring.monitoredResourceDescriptors.list",
              "monitoring.notificationChannelDescriptors.get",
              "monitoring.notificationChannelDescriptors.list",
              "monitoring.notificationChannels.get",
              "monitoring.notificationChannels.list",
              "monitoring.publicWidgets.get",
              "monitoring.publicWidgets.list",
              "monitoring.services.get",
              "monitoring.services.list",
              "monitoring.slos.get",
              "monitoring.slos.list",
              "monitoring.timeSeries.list",
              "monitoring.uptimeCheckConfigs.get",
              "monitoring.uptimeCheckConfigs.list",
              "opsconfigmonitoring.resourceMetadata.list",
              "resourcemanager.projects.get",
              "resourcemanager.projects.getIamPolicy",
              "secretmanager.locations.get",
              "secretmanager.locations.list",
              "secretmanager.secrets.create",
              "secretmanager.secrets.delete",
              "secretmanager.secrets.get",
              "secretmanager.secrets.getIamPolicy",
              "secretmanager.secrets.list",
              "secretmanager.secrets.setIamPolicy",
              "secretmanager.secrets.update",
              "secretmanager.versions.access",
              "secretmanager.versions.add",
              "secretmanager.versions.destroy",
              "secretmanager.versions.disable",
              "secretmanager.versions.enable",
              "secretmanager.versions.get",
              "secretmanager.versions.list",
              "stackdriver.projects.get",
              "storage.buckets.get",
              "storage.buckets.getIamPolicy",
              "storage.buckets.list",
              "storage.buckets.listTagBindings",
              "storage.buckets.setIamPolicy",
              "storage.multipartUploads.abort",
              "storage.multipartUploads.create",
              "storage.multipartUploads.list",
              "storage.multipartUploads.listParts",
              "storage.objects.create",
              "storage.objects.delete",
              "storage.objects.list"
            ],
            "project": "idea-ind-data-ai-dev",
            "role_id": "Dataproc_Developer_tf4",
            "stage": "GA",
            "title": "Ontology_Developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_custom_role",
      "name": "my-custom-role5",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "deleted": false,
            "description": "A description",
            "id": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf5",
            "name": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf5",
            "permissions": [
              "bigquery.bireservations.get",
              "bigquery.capacityCommitments.get",
              "bigquery.capacityCommitments.list",
              "bigquery.config.get",
              "bigquery.connections.get",
              "bigquery.connections.updateTag",
              "bigquery.datasets.create",
              "bigquery.datasets.get",
              "bigquery.datasets.getIamPolicy",
              "bigquery.datasets.updateTag",
              "bigquery.jobs.create",
              "bigquery.jobs.list",
              "bigquery.models.create",
              "bigquery.models.delete",
              "bigquery.models.export",
              "bigquery.models.getData",
              "bigquery.models.getMetadata",
              "bigquery.models.list",
              "bigquery.models.updateData",
              "bigquery.models.updateMetadata",
              "bigquery.models.updateTag",
              "bigquery.readsessions.create",
              "bigquery.readsessions.getData",
              "bigquery.readsessions.update",
              "bigquery.reservationAssignments.list",
              "bigquery.reservationAssignments.search",
              "bigquery.reservations.get",
              "bigquery.reservations.list",
              "bigquery.routines.create",
              "bigquery.routines.delete",
              "bigquery.routines.get",
              "bigquery.routines.list",
              "bigquery.routines.update",
              "bigquery.routines.updateTag",
              "bigquery.savedqueries.get",
              "bigquery.savedqueries.list",
              "bigquery.tables.create",
              "bigquery.tables.createSnapshot",
              "bigquery.tables.delete",
              "bigquery.tables.export",
              "bigquery.tables.get",
              "bigquery.tables.getData",
              "bigquery.tables.getIamPolicy",
              "bigquery.tables.list",
              "bigquery.tables.restoreSnapshot",
              "bigquery.tables.update",
              "bigquery.tables.updateData",
              "bigquery.tables.updateTag",
              "bigquery.transfers.get",
              "composer.dags.execute",
              "composer.dags.get",
              "composer.dags.list",
              "composer.environments.get",
              "composer.environments.list",
              "composer.imageversions.list",
              "composer.operations.delete",
              "composer.operations.get",
              "composer.operations.list",
              "compute.instances.get",
              "compute.instances.getScreenshot",
              "compute.instances.list",
              "compute.machineTypes.get",
              "compute.machineTypes.list",
              "compute.networks.get",
              "compute.networks.list",
              "compute.projects.get",
              "compute.regions.get",
              "compute.regions.list",
              "compute.zones.get",
              "compute.zones.list",
              "container.apiServices.get",
              "container.apiServices.getStatus",
              "container.apiServices.list",
              "container.auditSinks.get",
              "container.auditSinks.list",
              "container.backendConfigs.get",
              "container.backendConfigs.list",
              "container.bindings.get",
              "container.bindings.list",
              "container.certificateSigningRequests.get",
              "container.certificateSigningRequests.getStatus",
              "container.certificateSigningRequests.list",
              "container.clusterRoleBindings.get",
              "container.clusterRoleBindings.list",
              "container.clusterRoles.get",
              "container.clusterRoles.list",
              "container.clusters.get",
              "container.clusters.list",
              "container.componentStatuses.get",
              "container.componentStatuses.list",
              "container.configMaps.get",
              "container.configMaps.list",
              "container.controllerRevisions.get",
              "container.controllerRevisions.list",
              "container.cronJobs.get",
              "container.cronJobs.getStatus",
              "container.cronJobs.list",
              "container.csiDrivers.get",
              "container.csiDrivers.list",
              "container.csiNodeInfos.get",
              "container.csiNodeInfos.list",
              "container.csiNodes.get",
              "container.csiNodes.list",
              "container.customResourceDefinitions.get",
              "container.customResourceDefinitions.getStatus",
              "container.customResourceDefinitions.list",
              "container.daemonSets.get",
              "container.daemonSets.getStatus",
              "container.daemonSets.list",
              "container.deployments.get",
              "container.deployments.getScale",
              "container.deployments.getStatus",
              "container.deployments.list",
              "container.endpointSlices.get",
              "container.endpointSlices.list",
              "container.endpoints.get",
              "container.endpoints.list",
              "container.events.get",
              "container.events.list",
              "container.frontendConfigs.get",
              "container.frontendConfigs.list",
              "container.horizontalPodAutoscalers.get",
              "container.horizontalPodAutoscalers.getStatus",
              "container.horizontalPodAutoscalers.list",
              "container.ingresses.get",
              "container.ingresses.getStatus",
              "container.ingresses.list",
              "container.initializerConfigurations.get",
              "container.initializerConfigurations.list",
              "container.jobs.get",
              "container.jobs.getStatus",
              "container.jobs.list",
              "container.leases.get",
              "container.leases.list",
              "container.limitRanges.get",
              "container.limitRanges.list",
              "container.managedCertificates.get",
              "container.managedCertificates.list",
              "container.mutatingWebhookConfigurations.get",
              "container.mutatingWebhookConfigurations.list",
              "container.namespaces.get",
              "container.namespaces.getStatus",
              "container.namespaces.list",
              "container.networkPolicies.get",
              "container.networkPolicies.list",
              "container.nodes.get",
              "container.nodes.getStatus",
              "container.nodes.list",
              "container.operations.get",
              "container.operations.list",
              "container.persistentVolumeClaims.get",
              "container.persistentVolumeClaims.getStatus",
              "container.persistentVolumeClaims.list",
              "container.persistentVolumes.get",
              "container.persistentVolumes.getStatus",
              "container.persistentVolumes.list",
              "container.petSets.get",
              "container.petSets.list",
              "container.podDisruptionBudgets.get",
              "container.podDisruptionBudgets.getStatus",
              "container.podDisruptionBudgets.list",
              "container.podPresets.get",
              "container.podPresets.list",
              "container.podSecurityPolicies.get",
              "container.podSecurityPolicies.list",
              "container.podTemplates.get",
              "container.podTemplates.list",
              "container.pods.get",
              "container.pods.getStatus",
              "container.pods.list",
              "container.priorityClasses.get",
              "container.priorityClasses.list",
              "container.replicaSets.get",
              "container.replicaSets.getScale",
              "container.replicaSets.getStatus",
              "container.replicaSets.list",
              "container.replicationControllers.get",
              "container.replicationControllers.getScale",
              "container.replicationControllers.getStatus",
              "container.replicationControllers.list",
              "container.resourceQuotas.get",
              "container.resourceQuotas.getStatus",
              "container.resourceQuotas.list",
              "container.roleBindings.get",
              "container.roleBindings.list",
              "container.roles.get",
              "container.roles.list",
              "container.runtimeClasses.get",
              "container.runtimeClasses.list",
              "container.scheduledJobs.get",
              "container.scheduledJobs.list",
              "container.serviceAccounts.get",
              "container.serviceAccounts.list",
              "container.services.get",
              "container.services.getStatus",
              "container.services.list",
              "container.statefulSets.get",
              "container.statefulSets.getScale",
              "container.statefulSets.getStatus",
              "container.statefulSets.list",
              "container.storageClasses.get",
              "container.storageClasses.list",
              "container.storageStates.get",
              "container.storageStates.getStatus",
              "container.storageStates.list",
              "container.storageVersionMigrations.get",
              "container.storageVersionMigrations.getStatus",
              "container.storageVersionMigrations.list",
              "container.thirdPartyObjects.get",
              "container.thirdPartyObjects.list",
              "container.thirdPartyResources.get",
              "container.thirdPartyResources.list",
              "container.tokenReviews.create",
              "container.updateInfos.get",
              "container.updateInfos.list",
              "container.validatingWebhookConfigurations.get",
              "container.validatingWebhookConfigurations.list",
              "container.volumeAttachments.get",
              "container.volumeAttachments.getStatus",
              "container.volumeAttachments.list",
              "container.volumeSnapshotClasses.get",
              "container.volumeSnapshotClasses.list",
              "container.volumeSnapshotContents.get",
              "container.volumeSnapshotContents.getStatus",
              "container.volumeSnapshotContents.list",
              "container.volumeSnapshots.get",
              "container.volumeSnapshots.list",
              "datacatalog.categories.getIamPolicy",
              "datacatalog.categories.setIamPolicy",
              "datacatalog.entries.create",
              "datacatalog.entries.delete",
              "datacatalog.entries.get",
              "datacatalog.entries.getIamPolicy",
              "datacatalog.entries.list",
              "datacatalog.entries.setIamPolicy",
              "datacatalog.entries.update",
              "datacatalog.entries.updateTag",
              "datacatalog.entryGroups.create",
              "datacatalog.entryGroups.delete",
              "datacatalog.entryGroups.get",
              "datacatalog.entryGroups.getIamPolicy",
              "datacatalog.entryGroups.list",
              "datacatalog.entryGroups.setIamPolicy",
              "datacatalog.entryGroups.update",
              "datacatalog.tagTemplates.create",
              "datacatalog.tagTemplates.delete",
              "datacatalog.tagTemplates.get",
              "datacatalog.tagTemplates.getIamPolicy",
              "datacatalog.tagTemplates.getTag",
              "datacatalog.tagTemplates.setIamPolicy",
              "datacatalog.tagTemplates.update",
              "datacatalog.tagTemplates.use",
              "datacatalog.taxonomies.create",
              "datacatalog.taxonomies.delete",
              "datacatalog.taxonomies.get",
              "dataflow.jobs.cancel",
              "dataflow.jobs.create",
              "dataflow.jobs.get",
              "dataflow.jobs.list",
              "dataflow.jobs.snapshot",
              "dataflow.jobs.updateContents",
              "dataflow.messages.list",
              "dataflow.metrics.get",
              "dataflow.snapshots.delete",
              "dataflow.snapshots.get",
              "dataflow.snapshots.list",
              "datafusion.instances.get",
              "datafusion.instances.getIamPolicy",
              "datafusion.instances.list",
              "datafusion.locations.get",
              "datafusion.locations.list",
              "datafusion.operations.cancel",
              "datafusion.operations.get",
              "datafusion.operations.list",
              "dataproc.autoscalingPolicies.get",
              "dataproc.autoscalingPolicies.list",
              "dataproc.autoscalingPolicies.use",
              "dataproc.clusters.get",
              "dataproc.clusters.list",
              "dataproc.clusters.use",
              "dataproc.jobs.cancel",
              "dataproc.jobs.create",
              "dataproc.jobs.delete",
              "dataproc.jobs.get",
              "dataproc.jobs.list",
              "dataproc.jobs.update",
              "dataproc.operations.cancel",
              "dataproc.operations.delete",
              "dataproc.operations.get",
              "dataproc.operations.list",
              "dataproc.workflowTemplates.create",
              "dataproc.workflowTemplates.delete",
              "dataproc.workflowTemplates.get",
              "dataproc.workflowTemplates.instantiate",
              "dataproc.workflowTemplates.instantiateInline",
              "dataproc.workflowTemplates.list",
              "dataproc.workflowTemplates.update",
              "dlp.analyzeRiskTemplates.create",
              "dlp.analyzeRiskTemplates.delete",
              "dlp.analyzeRiskTemplates.get",
              "dlp.analyzeRiskTemplates.list",
              "dlp.analyzeRiskTemplates.update",
              "dlp.columnDataProfiles.get",
              "dlp.columnDataProfiles.list",
              "dlp.deidentifyTemplates.create",
              "dlp.deidentifyTemplates.delete",
              "dlp.deidentifyTemplates.get",
              "dlp.deidentifyTemplates.list",
              "dlp.deidentifyTemplates.update",
              "dlp.estimates.cancel",
              "dlp.estimates.create",
              "dlp.estimates.delete",
              "dlp.estimates.get",
              "dlp.estimates.list",
              "dlp.inspectFindings.list",
              "dlp.inspectTemplates.create",
              "dlp.inspectTemplates.delete",
              "dlp.inspectTemplates.get",
              "dlp.inspectTemplates.list",
              "dlp.inspectTemplates.update",
              "dlp.jobTriggers.create",
              "dlp.jobTriggers.delete",
              "dlp.jobTriggers.get",
              "dlp.jobTriggers.hybridInspect",
              "dlp.jobTriggers.list",
              "dlp.jobTriggers.update",
              "dlp.jobs.cancel",
              "dlp.jobs.create",
              "dlp.jobs.delete",
              "dlp.jobs.get",
              "dlp.jobs.hybridInspect",
              "dlp.jobs.list",
              "dlp.kms.encrypt",
              "dlp.projectDataProfiles.get",
              "dlp.projectDataProfiles.list",
              "dlp.storedInfoTypes.create",
              "dlp.storedInfoTypes.delete",
              "dlp.storedInfoTypes.get",
              "dlp.storedInfoTypes.list",
              "dlp.storedInfoTypes.update",
              "dlp.tableDataProfiles.get",
              "dlp.tableDataProfiles.list",
              "resourcemanager.projects.get",
              "secretmanager.locations.get",
              "secretmanager.locations.list",
              "secretmanager.secrets.create",
              "secretmanager.secrets.delete",
              "secretmanager.secrets.get",
              "secretmanager.secrets.getIamPolicy",
              "secretmanager.secrets.list",
              "secretmanager.secrets.setIamPolicy",
              "secretmanager.secrets.update",
              "secretmanager.versions.access",
              "secretmanager.versions.add",
              "secretmanager.versions.destroy",
              "secretmanager.versions.disable",
              "secretmanager.versions.enable",
              "secretmanager.versions.get",
              "secretmanager.versions.list",
              "serviceusage.quotas.get",
              "serviceusage.services.get",
              "serviceusage.services.list",
              "serviceusage.services.use",
              "storage.buckets.get",
              "storage.buckets.getIamPolicy",
              "storage.buckets.list",
              "storage.buckets.listTagBindings",
              "storage.multipartUploads.abort",
              "storage.multipartUploads.create",
              "storage.multipartUploads.list",
              "storage.multipartUploads.listParts",
              "storage.objects.create",
              "storage.objects.delete",
              "storage.objects.list"
            ],
            "project": "idea-ind-data-ai-dev",
            "role_id": "Dataproc_Developer_tf5",
            "stage": "GA",
            "title": "datatrust_developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf1/serviceaccount:saabcrdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:saabcrdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.serviceaccount.google_project_iam_custom_role.my-custom-role1",
            "module.serviceaccount.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings2",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf2/serviceaccount:saaimldevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:saaimldevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf2"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.serviceaccount.google_project_iam_custom_role.my-custom-role2",
            "module.serviceaccount.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings3",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf3/serviceaccount:samigrationdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:samigrationdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf3"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.serviceaccount.google_project_iam_custom_role.my-custom-role3",
            "module.serviceaccount.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings4",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf4/serviceaccount:saontologydevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:saontologydevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf4"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.serviceaccount.google_project_iam_custom_role.my-custom-role4",
            "module.serviceaccount.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings5",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf5/serviceaccount:sadatatrustdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:sadatatrustdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.serviceaccount.google_project_iam_custom_role.my-custom-role5",
            "module.serviceaccount.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "training_sa_role_bindings6",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXY0SB9SrI=",
            "id": "idea-ind-data-ai-dev/projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf/serviceaccount:sacdfdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "member": "serviceAccount:sacdfdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "role": "projects/idea-ind-data-ai-dev/roles/Dataproc_Developer_tf"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.serviceaccount.google_project_iam_custom_role.my-custom-role",
            "module.serviceaccount.google_service_account.sa-name"
          ]
        }
      ]
    },
    {
      "module": "module.serviceaccount",
      "mode": "managed",
      "type": "google_service_account",
      "name": "sa-name",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "sacdfdevelopertf",
            "description": "",
            "display_name": "sa_cdf_developer_tf",
            "email": "sacdfdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/sacdfdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/sacdfdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "105951897063284337129"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "account_id": "saabcrdevelopertf",
            "description": "",
            "display_name": "sa_abcr_developer_tf",
            "email": "saabcrdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/saabcrdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/saabcrdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "106504202579254712469"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "account_id": "saaimldevelopertf",
            "description": "",
            "display_name": " sa_aiml_developer_tf",
            "email": "saaimldevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/saaimldevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/saaimldevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "107256086869885613765"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "account_id": "samigrationdevelopertf",
            "description": "",
            "display_name": "sa_migration_developer_tf",
            "email": "samigrationdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/samigrationdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/samigrationdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "104736016983518926756"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "account_id": "saontologydevelopertf",
            "description": "",
            "display_name": "sa_ontology_developer_tf",
            "email": "saontologydevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/saontologydevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/saontologydevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "106583518516637402320"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        },
        {
          "index_key": 5,
          "schema_version": 0,
          "attributes": {
            "account_id": "sadatatrustdevelopertf",
            "description": "",
            "display_name": "sa_datatrust_developer_tf",
            "email": "sadatatrustdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "id": "projects/idea-ind-data-ai-dev/serviceAccounts/sadatatrustdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "name": "projects/idea-ind-data-ai-dev/serviceAccounts/sadatatrustdevelopertf@idea-ind-data-ai-dev.iam.gserviceaccount.com",
            "project": "idea-ind-data-ai-dev",
            "timeouts": null,
            "unique_id": "112961664568011349149"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.storage_bucket_module",
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "tstdataprocbuck",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket_policy_only": false,
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "bucket-aiml-idea-tf",
            "labels": null,
            "lifecycle_rule": [],
            "location": "ASIA-SOUTH1",
            "logging": [],
            "name": "bucket-aiml-idea-tf",
            "project": "idea-ind-data-ai-dev",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/bucket-aiml-idea-tf",
            "storage_class": "STANDARD",
            "uniform_bucket_level_access": false,
            "url": "gs://bucket-aiml-idea-tf",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.storage_bucket_module",
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "tstdataprocbuck2",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket_policy_only": false,
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "bucket-migration-idea-tf",
            "labels": null,
            "lifecycle_rule": [],
            "location": "ASIA-SOUTH1",
            "logging": [],
            "name": "bucket-migration-idea-tf",
            "project": "idea-ind-data-ai-dev",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/bucket-migration-idea-tf",
            "storage_class": "STANDARD",
            "uniform_bucket_level_access": false,
            "url": "gs://bucket-migration-idea-tf",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
